Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Tags,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury,Script: On Dodge
Thornplate,Block [shield]<d6> damage|Gain [thorns]1 thorns,1,inflictself(SHIELD[;] d); inflictself(THORNS[;] 1);,Protection,MAX3,,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Thornplate_upgraded,Block [shield]<d6> damage|Gain [thorns]2 thorns,1,inflictself(SHIELD[;] d); inflictself(THORNS[;] 2);,Protection,MAX3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Thornplate_downgraded,Block [shield]<d6> damage,1,inflictself(SHIELD[;] d);,Protection,MAX3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Energy Drink,Boost Limit Break|by 75%,1,if (!simulation) {self.limitvalue += self.limitmax * 0.75; if (self.limitvalue > self.limitmax) self.limitvalue = self.limitmax;} else bonus(-1000);,Focus,COUNTDOWN,12,YELLOW,change_power,change_power,,_cure,0,YES,NO,,1,,,,,,,,,,,
Energy Drink_upgraded,Gain Limit Break,1,if (!simulation) {self.limitvalue = self.limitmax;} else bonus(-1000);,Focus,COUNTDOWN,12,YELLOW,,,,_cure,0,YES,NO,,,,,,,,,,,,,
Energy Drink_downgraded,Boost Limit Break|by 50%,1,if (!simulation) {self.limitvalue += self.limitmax * 0.5; if (self.limitvalue > self.limitmax) self.limitvalue = self.limitmax;} else bonus(-1000);,Focus,COUNTDOWN,12,YELLOW,,,,_cure,0,YES,NO,,,,,,,,,,,,,
Time Skip,Get an extra turn[;] but|disable your weapons,1,inflictself(EXTRATURN); if (!simulation) {var weapons = []; if (~~ + self.layout == ~EQUIPMENT~) weapons = runscript(~megaquest/getequipmentbycategory~[;] [~weapon~[;] self.equipment]); weapons.push(e); if (weapons.length > 0) for (weapon in weapons) {weapon.availablethisturn = false; weapon.availablenextturn = false; weapon.unavailabletext = weapon.displayname + weapon.namemodifier; weapon.unavailabledetails = [~Unavailable (Time Skip)~]; weapon.animate(~flashandshake~);}},Mulligan,COUNTDOWN,12,PINK,halfcountdown,noeffect,,_dodge,0,YES,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Ultimate Spell,Do 8 damage|Inflict every status,1,attack(1); var _phases = [{st: POISON[;] c: ~PURPLE~}[;] {st: FIRE[;] c: ~RED~}[;] {st: SHOCK[;] c: ~YELLOW~}[;] {st: ICE[;] c: ~BRIGHTCYAN~}[;] {st: WEAKEN[;] c: ~ORANGE~}[;] {st: CURSE[;] c: ~PURPLE~}[;] {st: ~mqencase~[;] c: ~GREEN~}[;] {st: LOCK[;] c: ~GRAY~}]; var phases = []; for (i in 0...(1 + getstatusself(FURY))) phases = phases.concat(_phases); removestatusself(FURY[;] ALL); if (!simulation) {inflict(phases[0].st); sfx(~_~ + phases[0].st.toLowerCase()[;] ~~[;] 0.2); for (i in 1...phases.length) {runscript(~megaquest/delaycall~[;] [function (args) {var eq = runscript(~megaquest/createequipment~[;] [e.name[;] e.upgraded[;] e.weakened[;] e.x[;] 720[;] self[;] true]); eq.changecolour(args[1]); eq.script = ~attack(1); inflict(\~~ + args[0] + ~\~); sfx(\~_~ + args[0].toLowerCase() + ~\~[;] \~\~[;] 0.2);~; runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]); eq.remainingcountdown = args[2];}[;] (i - 1) * 0.5[;] phases[i].st[;] phases[i].c[;] e.maxcountdown / phases.length * (i + 1)]);}} else {for (i in 1...phases.length) {attack(1); inflict(phases[i].st);}},Glitter Bomb,COUNTDOWN,24,PURPLE,threequartercountdown,change_power,,_magic,0,NO,NO,,1,,,,,,,,delay(1.0);,,e.preventdefault = true; e.maintainfury = true;,
Ultimate Spell_downgraded,Do 4 damage|Inflict some statuses,1,attack(1); var _phases = shuffle([{st: FIRE[;] c: ~RED~}[;] {st: SHOCK[;] c: ~YELLOW~}[;] {st: ICE[;] c: ~BRIGHTCYAN~}[;] {st: WEAKEN[;] c: ~ORANGE~}[;] {st: CURSE[;] c: ~PURPLE~}[;] {st: ~mqencase~[;] c: ~GREEN~}[;] {st: LOCK[;] c: ~GRAY~}]); var phases = [{st: POISON[;] c: ~PURPLE~}]; for (i in 0...3) phases.push(_phases.pop()); var truephases = []; for (i in 0...(1 + getstatusself(FURY))) truephases = truephases.concat(phases); phases = truephases.copy(); removestatusself(FURY[;] ALL); if (!simulation) {inflict(phases[0].st); sfx(~_~ + phases[0].st.toLowerCase()[;] ~~[;] 0.2); for (i in 1...phases.length) {runscript(~megaquest/delaycall~[;] [function (args) {var eq = runscript(~megaquest/createequipment~[;] [e.name[;] e.upgraded[;] e.weakened[;] e.x[;] 720[;] self[;] true]); eq.changecolour(args[1]); eq.script = ~attack(1); inflict(\~~ + args[0] + ~\~); sfx(\~_~ + args[0].toLowerCase() + ~\~[;] \~\~[;] 0.2);~; runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]); eq.remainingcountdown = args[2];}[;] (i - 1) * 0.5[;] phases[i].st[;] phases[i].c[;] e.maxcountdown / phases.length * (i + 1)]);}} else {for (i in 1...phases.length) {attack(1); inflict(phases[i].st);}},Glitter Bomb,COUNTDOWN,24,PURPLE,,,,_magic,0,NO,NO,,1,,,,,,,,delay(1.0);,,e.preventdefault = true; e.maintainfury = true;,
Light Rapier,Do [sword]<d6> damage[;] +1|use on odd [gray]([recycle]<evar:rapier_reuses>/1 left),2,attack(d); sfxdamage(target[;] d); if (simulation && ((d % 2) == 1)) bonus(100);,Plasma Gun,MAX5,,RED,change_power,change_power,,_metals,0,NO,NO,hidereuseable,,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,,,,e.reuseable = 0; e.usesleft = 0;,if ((d % 2) == 1 && e.getvar(~rapier_reuses~) > 0) {e.reuseable = 1; e.usesleft = 2; sfx(~_recycle~[;] ~~[;] 0.2); e.setvar(~rapier_reuses~[;] e.getvar(~rapier_reuses~) - 1);},,,
Light Rapier_upgraded,Do [sword]<d6> damage[;] +1|use on odd [gray]([recycle]<evar:rapier_reuses>/2 left),2,attack(d); sfxdamage(target[;] d); if (simulation && ((d % 2) == 1)) bonus(100);,Plasma Gun,MAX5,,RED,,,,_metals,0,NO,NO,hidereuseable,,e.setvar(~rapier_reuses~[;] 2); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 2); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 2); e.reuseable = 0; e.usesleft = 0;,,,,e.reuseable = 0; e.usesleft = 0;,if ((d % 2) == 1 && e.getvar(~rapier_reuses~) > 0) {e.reuseable = 1; e.usesleft = 2; sfx(~_recycle~[;] ~~[;] 0.2); e.setvar(~rapier_reuses~[;] e.getvar(~rapier_reuses~) - 1);},,,
Light Rapier_downgraded,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Plasma Gun,MAX5,,RED,,,,_metals,0,NO,NO,,,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,e.setvar(~rapier_reuses~[;] 1); e.reuseable = 0; e.usesleft = 0;,,,,,,,,
Wide Sword,Do [sword]<d6> damage|On 1[;] add [shield]3 shield,2,attack(d); sfxdamage(target[;] d); if (d == 1) {inflictself(SHIELD[;] 3); sfx(~_shield~[;] ~~[;] 0.2);},Protection,MAX5,,ORANGE,change_power,complicate,,_metals,0,NO,NO,,,,,,,,,,,,,if (d == 1) {inflictself(SHIELD[;] 3); sfx(~_shield~[;] ~~[;] 0.2);}
Wide Sword_upgraded,Do [sword]<d6> damage|On 1[;] add [shield]5 shield,2,attack(d); sfxdamage(target[;] d); if (d == 1) {inflictself(SHIELD[;] 5); sfx(~_shield~[;] ~~[;] 0.2);},Protection,MAX5,,ORANGE,,,,_metals,0,NO,NO,,,,,,,,,,,,,if (d == 1) {inflictself(SHIELD[;] 3); sfx(~_shield~[;] ~~[;] 0.2);}
Jammed Cannon,Do [sword]<d6> damage[;] but take|[sword]damage of first dice,1,if (!simulation) {if (e.getvar(~jammed_cannon_forward~) == 1) {attack(d); sfxdamage(target[;] d); e.setvar(~jammed_cannon_forward~[;] 0); if (target.hp > 0) {if (getstatusself(FURY) > 0) {removestatusself(FURY); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? -e.height : 2160) : (e.castdirection != 1 ? 2160 : -e.height)); e.doequipmentaction(self[;] target[;] (self.isplayer ? 1 : -1)[;] e.assigneddice[;] 0[;] true);}} sfx(~_plasma~[;] ~~[;] 0.1);} else {attackself(actualdice[0].basevalue); sfxdamage(self[;] actualdice[0].basevalue); if (self.hp > 0) {e.setvar(~jammed_cannon_forward~[;] 1); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? 2160 : -e.height) : (e.castdirection != 1 ? -e.height : 2160)); e.doequipmentaction(self[;] target[;] (self.isplayer ? -1 : 1)[;] e.assigneddice[;] 0[;] true);} sfx(~roboterror~);}} else {attack(d); attackself(actualdice[0].basevalue);},Plasma Gun,NORMAL|NORMAL,,RED,change_power,change_power,,none,0,YES,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Jammed Cannon_upgraded,Do [sword]<d6> damage[;] but take|[sword]damage of first dice,1,if (!simulation) {if (e.getvar(~jammed_cannon_forward~) == 1) {attack(d); sfxdamage(target[;] d); e.setvar(~jammed_cannon_forward~[;] 0); if (target.hp > 0) {if (getstatusself(FURY) > 0) {removestatusself(FURY); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? -e.height : 2160) : (e.castdirection != 1 ? 2160 : -e.height)); e.doequipmentaction(self[;] target[;] (self.isplayer ? 1 : -1)[;] e.assigneddice[;] 0[;] true);}} sfx(~_plasma~[;] ~~[;] 0.1);} else {attackself(actualdice[0].basevalue); sfxdamage(self[;] actualdice[0].basevalue); if (self.hp > 0) {e.setvar(~jammed_cannon_forward~[;] 1); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? 2160 : -e.height) : (e.castdirection != 1 ? -e.height : 2160)); e.doequipmentaction(self[;] target[;] (self.isplayer ? -1 : 1)[;] e.assigneddice[;] 0[;] true);} sfx(~roboterror~);}} else {attack(d); attackself(actualdice[0].basevalue);},Plasma Gun,NORMAL|NORMAL|NORMAL,,RED,,,,none,0,YES,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Jammed Cannon_weakened,Do [sword]<d6> damage[;] but take|[sword]damage of first dice,1,if (!simulation) {if (e.getvar(~jammed_cannon_forward~) == 1) {attack(d); sfxdamage(target[;] d); e.setvar(~jammed_cannon_forward~[;] 0); if (target.hp > 0) {if (getstatusself(FURY) > 0) {removestatusself(FURY); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? -e.height : 2160) : (e.castdirection != 1 ? 2160 : -e.height)); e.doequipmentaction(self[;] target[;] (self.isplayer ? 1 : -1)[;] e.assigneddice[;] 0[;] true);}} sfx(~_plasma~[;] ~~[;] 0.1);} else {attackself(actualdice[0].basevalue); sfxdamage(self[;] actualdice[0].basevalue); if (self.hp > 0) {e.setvar(~jammed_cannon_forward~[;] 1); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? 2160 : -e.height) : (e.castdirection != 1 ? -e.height : 2160)); e.doequipmentaction(self[;] target[;] (self.isplayer ? -1 : 1)[;] e.assigneddice[;] 0[;] true);} sfx(~roboterror~);}} else {attack(d); attackself(actualdice[0].basevalue);},Plasma Gun,MIN5|MAX5|MAX5,,RED,,,,none,0,YES,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Jammed Cannon_downgraded,Do [sword]<d6> damage[;] but take|[sword]damage of first dice,1,if (!simulation) {if (e.getvar(~jammed_cannon_forward~) == 1) {attack(d); sfxdamage(target[;] d); e.setvar(~jammed_cannon_forward~[;] 0); if (target.hp > 0) {if (getstatusself(FURY) > 0) {removestatusself(FURY); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? -e.height : 2160) : (e.castdirection != 1 ? 2160 : -e.height)); e.doequipmentaction(self[;] target[;] (self.isplayer ? 1 : -1)[;] e.assigneddice[;] 0[;] true);}} sfx(~_plasma~[;] ~~[;] 0.1);} else {attackself(actualdice[0].basevalue); sfxdamage(self[;] actualdice[0].basevalue); if (self.hp > 0) {e.setvar(~jammed_cannon_forward~[;] 1); e.show = true; e.y = (self.isplayer ? (e.castdirection != 1 ? 2160 : -e.height) : (e.castdirection != 1 ? -e.height : 2160)); e.doequipmentaction(self[;] target[;] (self.isplayer ? -1 : 1)[;] e.assigneddice[;] 0[;] true);} sfx(~roboterror~);}} else {attack(d); attackself(actualdice[0].basevalue);},Plasma Gun,MIN5|MAX5,,RED,,,,none,0,YES,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Longspear,Do [sword]<d6> damage|+[sword]3 when [shield]shielded,2,var dmg = d; if (getstatusself(SHIELD) > 0) dmg += 3; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,EVEN,,ORANGE,simplify,change_power,,_metals,0,NO,NO,,,,,,,,,,,,,
Longspear_downgraded,Do [sword]<d6> damage|when [shield]shielded,2,if (getstatusself(SHIELD) > 0) {attack(dmg); sfxdamage(target[;] dmg);},Plasma Gun,EVEN|FREE3,,ORANGE,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Toothy Shield,Do [sword]<d6> damage|Add [shield]<d6> shield,2,attack(d); sfxdamage(target[;] d); inflictself(SHIELD[;] d);,Protection,MAX3,,ORANGE,increaserange,decreaserange,,_shield,0,NO,NO,,,,,,,,,,,,,inflictself(SHIELD[;] d);
Sturdy Helmet,Add [shield]<d6> shield,2,inflictself(SHIELD[;] d);,Protection,REQUIRE2|FREE4,,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Sturdy Helmet_upgraded,Add [shield]<d6> shield,2,inflictself(SHIELD[;] d);,Protection,REQUIRE1|FREE5,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Sturdy Helmet_downgraded,Add [shield]<d6> shield,2,inflictself(SHIELD[;] d);,Protection,REQUIRE3|FREE3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Spy Kunai,Do [sword]<double> damage|On kill[;] +[shield]6 next fight,1,attack(d * 2); sfxdamage(target[;] d * 2); if (target.hp <= 0) {if (!simulation) self.setvar(~mqnextfightshield~[;] self.getvar(~mqnextfightshield~) + 6); else bonus(1000);},Protection,REQUIRE1,,ORANGE,increaserange,change_power,,_metals,0,NO,NO,,,,,,,,,,,,,
Spy Kunai_downgraded,Do [sword]<d6> damage|On kill[;] +[shield]6 next fight,1,attack(d); sfxdamage(target[;] d); if (target.hp <= 0) {if (!simulation) self.setvar(~mqnextfightshield~[;] self.getvar(~mqnextfightshield~) + 6); else bonus(1000);},Protection,REQUIRE1,,ORANGE,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Pathfinder's Compass,Gain a random blessing[;] can|only use on even turns,1,if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); else bonus(1000);,Power Up,COUNTDOWN,6,GREEN,change_power,change_power,,none,0,YES,NO,,,,,if ((turn % 2) == 0) {e.availablethisturn = true;} else {e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Odd Turn)~];},,,,,,,,
Pathfinder's Compass_upgraded,Gain a random blessing[;] can|only use on odd turns,1,if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); else bonus(1000);,Power Up,COUNTDOWN,6,GREEN,,,,none,0,YES,NO,,,,,if ((turn % 2) == 1) {e.availablethisturn = true;} else {e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Even Turn)~];},,,,,,,,
Pathfinder's Compass_downgraded,50% chance to gain|a random blessing,1,var odds = 50; if (getstatusself(~luck~) > 0) odds += 50 * getstatusself(~luck~); if (getstatusself(~luck+~) > 0) odds = 100; if (chance(odds)) {if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); else bonus(1000);} else self.textparticle(~No effect!~);,Power Up,COUNTDOWN,6,GREEN,,,,none,0,YES,NO,,,,,e.availablethisturn = true;,,,,,,,,
Bunker Assembler,Add [shield]8 shield[;] countdown|-2 on each item use,1,inflictself(SHIELD[;] 8);,Protection,COUNTDOWN,24,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,e.remainingcountdown -= 2; if (e.remainingcountdown < 0) e.remainingcountdown = 0;,,,,,,
Bunker Assembler_upgraded,Add [shield]8 shield[;] countdown|-3 on each item use,1,inflictself(SHIELD[;] 8);,Protection,COUNTDOWN,24,ORANGE,,,,_shield,0,YES,NO,,,,,,,e.remainingcountdown -= 3; if (e.remainingcountdown < 0) e.remainingcountdown = 0;,,,,,,
Bunker Assembler_downgraded,Add [shield]8 shield[;] countdown|-1 on each item use,1,inflictself(SHIELD[;] 8);,Protection,COUNTDOWN,24,ORANGE,,,,_mqencase,0,YES,NO,,,,,,,e.remainingcountdown -= 1; if (e.remainingcountdown < 0) e.remainingcountdown = 0;,,,,,,
Malachite Spike,Do [sword]<d6> damage|Encase [mqencase]1 equipment,2,attack(d); sfxdamage(target[;] d); inflict(~mqencase~);,Topaz Trap,REQUIRE6,,GREEN,simplify,change_power,mqencase,_mqencase,0,NO,NO,,,,,,,,,,,,,
Malachite Spike_downgraded,Do [sword]<d6> damage|Encase [mqencase]1 equipment,2,attack(d); sfxdamage(target[;] d); inflict(~mqencase~);,Topaz Trap,REQUIRE3,,GREEN,,,,_mqencase,0,NO,NO,,,,,,,,,,,,,
Malachite Spike?,Do [sword]<d6> damage|Encase equipment by [mqencase]6,2,attack(d); sfxdamage(target[;] d); inflict(~mqencase~[;] 6);,Topaz Trap,REQUIRE6,,GREEN,simplify,change_power,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Malachite Spike?_downgraded,Do [sword]<d6> damage|Encase equipment by [mqencase]3,2,attack(d); sfxdamage(target[;] d); inflict(~mqencase~[;] 3);,Topaz Trap,REQUIRE3,,GREEN,,,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Crystal Growth,Encase [mqencase]1 equipment,1,inflict(~mqencase~);,Topaz Trap,ODD,,GREEN,simplify,complicate,mqencase,_mqencase,0,NO,NO,,,,,,,,,,,,,
Crystal Growth?,Encase equipment by [mqencase]6,1,inflict(~mqencase~[;] 6);,Topaz Trap,ODD,,GREEN,simplify,complicate,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Chlorinator,Encase [mqencase]1 equipment|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] getstatus(ICE));,Topaz Trap,DOUBLES|DOUBLES,,GREEN,change_power,change_power,mqencase,_mqencase,0,NO,NO,,,,,,,,,,,,,
Chlorinator_upgraded,Encase [mqencase]1 equipment|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] getstatus(ICE));,Topaz Trap,EVEN,,GREEN,,,,_mqencase,0,NO,NO,,,,,,,,,,,,,
Chlorinator_downgraded,Encase [mqencase]1 equipment|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] getstatus(ICE));,Topaz Trap,REQUIRE6|REQUIRE6,,GREEN,,,,_mqencase,0,NO,NO,,,,,,,,,,,,,
Chlorinator?,Encase equipment by [mqencase]6|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] 6 * getstatus(ICE));,Topaz Trap,DOUBLES|DOUBLES,,GREEN,change_power,change_power,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Chlorinator?_upgraded,Encase equipment by [mqencase]6|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] 6 * getstatus(ICE));,Topaz Trap,EVEN,,GREEN,,,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Chlorinator?_downgraded,Encase equipment by [mqencase]6|for every [ice]1 freeze on enemy,1,inflict(~mqencase~[;] 6 * getstatus(ICE));,Topaz Trap,REQUIRE6|REQUIRE6,,GREEN,,,,_mqencase,0,NO,NO,alternateversion,,,,,,,,,,,,
Tuning Fork,Do [sword]<d6> damage for|every [mqencase]1 encase on enemy,1,attack(d * getstatus(~mqencase~)); sfxdamage(target[;] d * getstatus(~mqencase~));,Plasma Gun,MAX3,,GREEN,increaserange,decreaserange,mqencase,_mqencasebreak,0,NO,NO,,,,,,,,,,,,,
Tuning Fork?,Do [sword]<d6> damage for|every [mqencase]6 encase on enemy,1,attack(d * (getstatus(~mqencase~) / 6)); sfxdamage(target[;] d * (getstatus(~mqencase~) / 6));,Plasma Gun,MAX3,,GREEN,increaserange,decreaserange,,_mqencasebreak,0,NO,NO,alternateversion,,,,,,,,,,,,
Hyper Amethyst,Add [shield]7 shield[;] but gain|encase [mqencase]ALL next turn,1,inflictself(SHIELD[;] 7); jinx(~Hyper_Amethyst~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] !simulation ? runscript(~megaquest/getequipmentcount~[;] [self]) : 8);,Protection,COUNTDOWN,7,ORANGE,change_power,change_power,mqencase,_shield,0,YES,NO,,,,,,,,,,,,,
Hyper Amethyst_upgraded,Add [shield]7 shield[;] but gain|encase [mqencase]2 next turn,1,inflictself(SHIELD[;] 7); jinx(~Hyper_Amethyst+~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] 2);,Protection,COUNTDOWN,7,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Hyper Amethyst_downgraded,Add [shield]3 shield[;] but gain|encase [mqencase]ALL next turn,1,inflictself(SHIELD[;] 3); jinx(~Hyper_Amethyst-~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] !simulation ? runscript(~megaquest/getequipmentcount~[;] [self]) : 8);,Protection,COUNTDOWN,7,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Hyper Amethyst?,Add [shield]7 shield[;] but gain|encase [mqencase]18 next turn,1,inflictself(SHIELD[;] 7); jinx(~Hyper_Amethyst~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] 18);,Protection,COUNTDOWN,7,ORANGE,change_power,change_power,,_shield,0,YES,NO,alternateversion,,,,,,,,,,,,
Hyper Amethyst?_upgraded,Add [shield]7 shield[;] but gain|encase [mqencase]12 next turn,1,inflictself(SHIELD[;] 7); jinx(~Hyper_Amethyst+~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] 12);,Protection,COUNTDOWN,7,ORANGE,,,,_shield,0,YES,NO,alternateversion,,,,,,,,,,,,
Hyper Amethyst?_downgraded,Add [shield]3 shield[;] but gain|encase [mqencase]18 next turn,1,inflictself(SHIELD[;] 3); jinx(~Hyper_Amethyst-~[;] ~encase [mqencase]%VAR% equipment~[;] ~Encase [mqencase]%VAR% equipment~[;] ~inflict(\~mqencase\~[;] %VAR%); sfx(\~_mqencase\~);~[;] self[;] target[;] 1[;] 18);,Protection,COUNTDOWN,7,ORANGE,,,,_shield,0,YES,NO,alternateversion,,,,,,,,,,,,
Bumpspade,Dice value +1|[weaken]Weaken enemy on 1,1,givedice(d + 1); if (d == 1) {inflict(WEAKEN); sfx(~_weaken~[;] ~~[;] 0.2);},Megabump,NORMAL,,ORANGE,change_power,change_power,,,0,NO,NO,,1,,,,,,,,e.castdirection = (d == 1 ? 1 : -1);,,,givedice(d + 1);
Bumpspade_upgraded,Dice value +1|[weaken]Weaken enemy on 6,1,givedice(d + 1); if (d == 6) {inflict(WEAKEN); sfx(~_weaken~[;] ~~[;] 0.2);},Megabump,NORMAL,,ORANGE,,,,,0,NO,NO,,,,,,,,,,e.castdirection = (d == 6 ? 1 : -1);,,,givedice(d + 1);
Bumpspade_downgraded,Dice value +1,1,givedice(d + 1);,Megabump,NORMAL,,ORANGE,,,,,0,YES,NO,,,,,,,,,,e.castdirection = -1;,,,
Judgenudge,Dice value -1|[curse]Curse enemy on 1,1,if (d > 1) givedice(d - 1); if (d == 1) {inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Meganudge,NORMAL,,PURPLE,change_power,change_power,,none,0,NO,NO,,1,,,,,,,,e.castdirection = (d == 1 ? 1 : -1);,,,if (d > 1) givedice(d - 1);
Judgenudge_upgraded,Dice value -1|[curse]Curse enemy on 6,1,if (d > 1) givedice(d - 1); if (d == 6) {inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Meganudge,NORMAL,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,e.castdirection = (d == 6 ? 1 : -1);,,,if (d > 1) givedice(d - 1);
Judgenudge_downgraded,Dice value -1,1,if (d > 1) givedice(d - 1);,Meganudge,NORMAL,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,e.castdirection = -1;,,,
Stunula,Flip a dice upside down|[shock]Shock enemy on 6,1,givedice(7 - d); if (d == 6) {inflict(SHOCK); sfx(~_shock~);},Megaflip,NORMAL,,YELLOW,change_power,change_power,,none,0,YES,NO,,,,,,,,,,e.castdirection = (d == 6 ? 1 : -1);,,,givedice(7 - d);
Stunula_upgraded,Flip a dice upside down|[shock]Shock enemy on 1,1,givedice(7 - d); if (d == 1) {inflict(SHOCK); sfx(~_shock~);},Megaflip,NORMAL,,YELLOW,,,,none,0,YES,NO,,,,,,,,,,e.castdirection = (d == 1 ? 1 : -1);,,,givedice(7 - d);
Stunula_downgraded,Flip a dice upside down,1,givedice(7 - d);,Megaflip,NORMAL,,YELLOW,,,,none,0,NO,NO,,,,,,,,,,e.castdirection = -1;,,,
Cursed Axe,Do [sword]<double> damage|Get [curse]cursed every turn,2,attack(d * 2);,Dramatic Pause,NORMAL,,PURPLE,add1,complicate,,none,0,NO,NO,cannotsteal,,,,inflictself(CURSE);,,,,,,,,
Star Caster,Do [sword]<d6> damage|On 6[;] inflict random status,2,attack(d); sfxdamage(target[;] d); var randstatus = rand([CURSE[;] LOCK[;] FIRE[;] ICE[;] WEAKEN[;] SHOCK[;] POISON[;] ~mqencase~]); if (d == 6) {inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()[;] ~~[;] 0.2);},Stardust,EVEN,,PINK,change_power,change_power,,_magic,0,NO,NO,,,,,,,,,,,,,
Star Caster_upgraded,Do [sword]<d6> damage|Inflict a random status,2,attack(d); sfxdamage(target[;] d); var randstatus = rand([CURSE[;] LOCK[;] FIRE[;] ICE[;] WEAKEN[;] SHOCK[;] POISON[;] ~mqencase~]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()[;] ~~[;] 0.2);,Stardust,EVEN,,PINK,,,,_magic,0,NO,NO,,,,,,,,,,,,,
Star Caster_downgraded,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Stardust,EVEN,,PINK,change_power,change_power,,_magic,0,NO,NO,,,,,,,,,,,,,
Eclipsed Blade,Do [sword]<d6>[;] inflict [poison]2|Start with [poison]4 poison,2,attack(d); sfxdamage(target[;] d); inflict(POISON[;] 2);,Poison Arrow,NORMAL,,PURPLE,change_power,change_power,,_poison,0,NO,NO,,,inflictself(POISON[;] 4); sfx(~_poison~[;] ~~[;] 0.2);,,,,,,,,,,
Eclipsed Blade_upgraded,Do [sword]<d6>[;] inflict [poison]2|Start with [poison]3 poison,2,attack(d); sfxdamage(target[;] d); inflict(POISON[;] 2);,Poison Arrow,NORMAL,,PURPLE,,,,_poison,0,NO,NO,,,inflictself(POISON[;] 3); sfx(~_poison~[;] ~~[;] 0.2);,,,,,,,,,,
Eclipsed Blade_downgraded,Do [sword]<d6>[;] inflict [poison]2|Gain [poison]4 this turn,2,attack(d); sfxdamage(target[;] d); inflict(POISON[;] 2);,Poison Arrow,NORMAL,,PURPLE,,,,_poison,0,NO,NO,,,inflictself(POISON[;] 4); sfx(~_poison~[;] ~~[;] 0.2);,,,inflictself(POISON[;] 4); sfx(~_poison~[;] ~~[;] 0.2);,,,,,,,
Backwards Pistol,Take [sword]<double> damage|On [dodge]dodge[]: attack enemy,1,if (getstatusself(DODGE) <= 0) {attackself(d * 2); sfxdamage(self[;] d * 2);} else {removestatusself(DODGE); attack(d * 2); sfxdamage(target[;] d * 2);},Pea Gun,NORMAL,,PURPLE,add1,complicate,dodge,none,0,YES,NO,,,,,,,,,,,,,
Backwards Pistol?,Take [sword]<double> damage|On [dodge]dodge[]: attack enemy,1,if (getstatusself(DODGE) <= 0 # chance(50)) {attackself(d * 2); sfxdamage(self[;] d * 2);} else {removestatusself(DODGE); attack(d * 2); sfxdamage(target[;] d * 2);},Pea Gun,NORMAL,,PURPLE,add1,complicate,,none,0,YES,NO,alternateversion,,,,,,,,,,,,
Hellsteel Coating,Attacks [fire]burn this turn|[gray](once per battle),1,inflictself(~mqcoatingfire~);,Ember,EVEN,,RED,change_power,change_power,,_fire,0,YES,YES,,,,,,,,,,,,,
Hellsteel Coating_upgraded,Attacks [fire]burn this turn,1,inflictself(~mqcoatingfire~);,Ember,EVEN,,RED,,,,_fire,0,YES,NO,,,,,,,,,,,,,
Hellsteel Coating_downgraded,Inflict [fire]1 burn,1,inflict(FIRE);,Ember,EVEN,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Moonstone Coating,Attacks [ice]freeze this turn|[gray](once per battle),1,inflictself(~mqcoatingice~);,Refrigerator,ODD,,BRIGHTCYAN,change_power,change_power,,_ice,0,YES,YES,,,,,,,,,,,,,
Moonstone Coating_upgraded,Attacks [ice]freeze this turn,1,inflictself(~mqcoatingice~);,Refrigerator,ODD,,BRIGHTCYAN,,,,_ice,0,YES,NO,,,,,,,,,,,,,
Moonstone Coating_downgraded,Inflict [ice]1 freeze,1,inflict(ICE);,Refrigerator,ODD,,BRIGHTCYAN,,,,_ice,0,NO,NO,,,,,,,,,,,,,
Lifesteel Coating,Attacks heal you this turn|[gray](once per battle),1,inflictself(~mqcoatingheal~);,Regenerate,ODD,,GREEN,change_power,change_power,,_heal,0,YES,YES,,,,,,,,,,,,,
Lifesteel Coating_upgraded,Attacks heal you this turn,1,inflictself(~mqcoatingheal~);,Regenerate,ODD,,GREEN,,,,_heal,0,YES,NO,,,,,,,,,,,,,
Lifesteel Coating_downgraded,Recover [heal]1 health,1,attackself(-1);,Regenerate,ODD,,GREEN,,,,_heal,0,YES,NO,,,,,,,,,,,,,
Ballistic Quartz,Do [sword]6 damage|Double random dice,2,attack(6); sfxdamage(target[;] 3); var dice = []; if (self.dicepool.length > 0) for (mydice in self.dicepool) if (simulation # mydice.available()) dice.push(mydice); if (dice.length >= 1) {var mydice = dice.pop(); var sum = 0; if (!simulation) {mydice.removedice(self.screenposition()); givedice(mydice.basevalue * 2);} else mydice.basevalue *= 2;},Magic Six,COUNTDOWN,8,GRAY,threequartercountdown,change_power,,none,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Ballistic Quartz_downgraded,Do [sword]6 damage|Combine random dice,2,attack(6); sfxdamage(target[;] 3); var dice = []; if (self.dicepool.length > 0) {for (mydice in self.dicepool) if ((simulation # mydice.available()) && mydice.basevalue < 6) dice.push(mydice); if (dice.length < 2) {dice = []; for (mydice in self.dicepool) if (simulation # mydice.available()) dice.push(mydice);}} if (dice.length >= 2) {var combinedice = [dice.pop()[;] dice.pop()]; var sum = 0; for (mydice in combinedice) {if (!simulation) mydice.removedice(self.screenposition()); else mydice.basevalue = 0; sum += mydice.basevalue;} givedice(sum[;] ~combinedice~);},Magic Six,COUNTDOWN,8,GRAY,,,,none,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Light of Enchantment,Make random equipment|easier to play,2,if (!simulation) {var vulnerableEquipment = []; for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.ready && eq.active) vulnerableEquipment.push(eq); vulnerableEquipment = shuffle(vulnerableEquipment); if (vulnerableEquipment.length > 0) for (i in 0...1) {if (vulnerableEquipment.length <= 0) break; var eq = vulnerableEquipment.pop(); runscript(~megaquest/makeequipmenteasiertoplay~[;] [eq]);}} else bonus(1000);,Reroll,ODD,,PINK,simplify,doublerequirements,,upgradeequipment,0,YES,NO,,,,,,,,,,,,,
Doom Herald,Do [sword]<d6> damage[;] if enemy|[heart] is below 50%[;] do [sword]<double>,2,var dmg = d; if (target.hp < target.maxhp * 0.5) dmg *= 2; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,EVEN,,PURPLE,change_power,change_power,,none,0,NO,NO,,,,,,,,,,,,,
Doom Herald_upgraded,Do [sword]<d6> damage[;] if enemy|[heart] is below 75%[;] do [sword]<double>,2,var dmg = d; if (target.hp < target.maxhp * 0.75) dmg *= 2; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,EVEN,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Doom Herald_downgraded,Do [sword]<d6> damage[;] if enemy|[heart] is below 25%[;] do [sword]<double>,2,var dmg = d; if (target.hp < target.maxhp * 0.25) dmg *= 2; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,EVEN,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Panic Attack,Curse[;] do [sword]6 on last use|[gray](Reuseable),2,inflict(CURSE); if (e.usesleft <= 0) {attack(6); sfxdamage(target[;] 6);},Dramatic Pause,ODD,,PURPLE,change_power,change_power,,_curse,3,NO,NO,,,,,,,,,,,,,
Panic Attack_upgraded,Curse[;] do [sword]8 on last use|[gray](Reuseable),2,inflict(CURSE); if (e.usesleft <= 0) {attack(8); sfxdamage(target[;] 8);},Dramatic Pause,ODD,,PURPLE,,,,_curse,3,NO,NO,,,,,,,,,,,,,
Panic Attack_downgraded,Curse enemy|[gray](Reuseable),2,inflict(CURSE);,Dramatic Pause,ODD,,PURPLE,,,,_curse,3,NO,NO,,,,,,,,,,,,,
Boneyard,Reduce enemy max|HP by [heart]2,2,bonus(500); target.maxhp -= 2; if (target.hp > target.maxhp) target.hp = target.maxhp;,Plasma Gun,EVEN,,PURPLE,change_power,change_power,,_drain,0,NO,NO,,,,,,,,,,,,,
Boneyard_upgraded,Reduce enemy max|HP by [heart]3,2,bonus(500); target.maxhp -= 3; if (target.hp > target.maxhp) target.hp = target.maxhp;,Plasma Gun,EVEN,,PURPLE,,,,_drain,0,NO,NO,,,,,,,,,,,,,
Boneyard_downgraded,Reduce enemy max|HP by [heart]1,2,bonus(500); target.maxhp -= 1; if (target.hp > target.maxhp) target.hp = target.maxhp;,Plasma Gun,EVEN,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Afterburner,Burn [fire]<d6> dice|On 3[;] dodge next attack,2,inflict(FIRE[;] d); if (d == 3) {inflictself(DODGE); sfx(~_dodge~[;] ~~[;] 0.2);},Blowtorch,MAX3,,RED,change_power,change_power,,_fire,0,NO,NO,,,,,,,,,,,,,if (d == 3) {inflictself(DODGE); sfx(~_dodge~[;] ~~[;] 0.2);}
Afterburner_upgraded,Burn [fire]<d6> dice|On 4[;] dodge next attack,2,inflict(FIRE[;] d); if (d == 4) {inflictself(DODGE); sfx(~_dodge~[;] ~~[;] 0.2);},Blowtorch,MAX4,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,if (d == 4) {inflictself(DODGE); sfx(~_dodge~[;] ~~[;] 0.2);}
Afterburner_downgraded,Burn [fire]<d6> dice,2,inflict(FIRE[;] d);,Blowtorch,MAX3,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Ghastly Armor,Dodge next attack[;] attacks|reduce countdown by 4,1,inflictself(DODGE);,Quick Thinking,COUNTDOWN,24,YELLOW,change_power,change_power,,_dodge,0,YES,NO,,,inflictself(~mqghastlyarmor~);,,,,,,,,,,
Ghastly Armor_upgraded,Dodge next attack[;] attacks|reduce countdown by 5,1,inflictself(DODGE);,Quick Thinking,COUNTDOWN,24,YELLOW,,,,_dodge,0,YES,NO,,,inflictself(~mqghastlyarmor~);,,,,,,,,,,
Ghastly Armor_downgraded,Dodge next attack,1,inflictself(DODGE);,Quick Thinking,COUNTDOWN,24,YELLOW,,,,_dodge,0,YES,NO,,,inflictself(~mqghastlyarmor~);,,,,,,,,,,
Roller Blade,Do [sword]<d6> damage[;] on 1[;]|dodge next attack instead,2,if (d != 1) {attack(d); sfxdamage(target[;] d);} else {bonus(1000); inflictself(DODGE); sfx(~_dodge~);},Quick Thinking,ODD,,PINK,simplify,change_power,,_metals,0,NO,NO,,,,,,,,,,e.castdirection = d != 1 ? 1 : -1;,,,
Roller Blade_downgraded,Dodge next attack,2,inflictself(DODGE); sfx(~_dodge~);,Quick Thinking,REQUIRE1,,PINK,,,,_metals,0,YES,NO,,,,,,,,,,,,,
Blessing Machine,Choose a blessing,1,if (!simulation) runscript(~megaquest/choicemenu~[;] [~[mana] Choose your blessing [mana]~[;] [{name: ~~[;] description: [~[shield]4_shield~[;] ~Block incoming damage~][;] colour: ~ORANGE~[;] script: ~inflictself(SHIELD[;] 4); sfx(\~_shield\~);~}[;] {name: ~~[;] description: [~[fury]Fury~[;] ~Repeat next attack~][;] colour: ~RED~[;] script: ~inflictself(FURY); sfx(\~_fury\~);~}[;] {name: ~~[;] description: [~[reduce]2_reduce~[;] ~Less damage from attacks~][;] colour: ~ORANGE~[;] script: ~inflictself(REDUCE[;] 2); sfx(\~_reduce\~);~}[;] {name: ~~[;] description: [~[recycle]Re-Equip_Next~[;] ~Extra equipment use~][;] colour: ~GREEN~[;] script: ~inflictself(REEQUIPNEXT); sfx(\~_recycle\~);~}[;] {name: ~~[;] description: [~[dodge]Dodge~[;] ~Avoid next attack~][;] colour: ~YELLOW~[;] script: ~inflictself(DODGE); sfx(\~_dodge\~);~}][;] self[;] e.castdirection]); else bonus(1000);,Power Up,COUNTDOWN,24,PINK,halfcountdown,change_power,,none,0,YES,NO,excludefromrandomlists|curseavoid,,,,,,,,,delay(1.0);,,,
Blessing Machine_downgraded,Gain a random blessing,1,if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); else bonus(1000);,Power Up,COUNTDOWN,24,PINK,,,,none,0,YES,NO,excludefromrandomlists|curseavoid,,,,,,,,,,,,
Blightning Rod,Do [shock]3 damage[;] has 100%|chance to trigger curse,1,attack(3[;] SHOCK); sfxdamage(target[;] 3);,Static Shock,COUNTDOWN,6,GRAY,change_power,change_power,,_shock,0,NO,NO,,,,,,,,,,runscript(~megaquest/delaycall~[;] [function (args) {Rules.curseodds = args[0];}[;] 0[;] Rules.curseodds]); Rules.curseodds = 100;,,,
Blightning Rod_upgraded,Inflict [curse]<var:blightning_rod_curses> curses|Passively absorbs curses,1,inflict(CURSE[;] !simulation ? self.getvar(~blightning_rod_curses~) : 1);,Static Shock,COUNTDOWN,6,GRAY,,,,_curse,0,NO,NO,,,,,,if (getstatusself(CURSE) > 0) {self.setvar(~blightning_rod_curses~[;] self.getvar(~blightning_rod_curses~) + getstatusself(CURSE)); removestatusself(CURSE[;] ALL); e.animate(~flashandshake~); runscript(~megaquest/textparticle~[;] [e[;] ~[star] Absorbed!~[;] 0xFFFFFF]); sfx(~_shock~);},,,,,,,
Blightning Rod_downgraded,Do [shock]1 damage[;] has 100%|chance to trigger curse,1,attack(3[;] SHOCK); sfxdamage(target[;] 3);,Static Shock,COUNTDOWN,6,GRAY,change_power,change_power,,_shock,0,NO,NO,,,,,,,,,,runscript(~megaquest/delaycall~[;] [function (args) {Rules.curseodds = args[0];}[;] 0[;] Rules.curseodds]); Rules.curseodds = 100;,,,
Lightmare,In [jinx]<d6> turns[;]|roll <d6> more dice,1,jinx(~Lightmare~[;] ~roll %VAR% more dice~[;] ~Roll %VAR% more dice~[;] ~target.bonusdice += %VAR%; sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] d);,Magic Dice,NORMAL,,PINK,change_power,change_power,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Lightmare_upgraded,In [jinx]<d6> turns[;]|roll <double> more dice,1,jinx(~Lightmare+~[;] ~roll %VAR% more dice~[;] ~Roll %VAR% more dice~[;] ~target.bonusdice += %VAR%; sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] d * 2);,Magic Dice,NORMAL,,PINK,,,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Lightmare_downgraded,In [jinx]<d6> turns[;]|roll 1 more dice,1,jinx(~Lightmare-~[;] ~roll %VAR% more dice~[;] ~Roll %VAR% more dice~[;] ~target.bonusdice += %VAR%; sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] 1);,Magic Dice,NORMAL,,PINK,,,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Heavy Rapier,Do [sword]<d6> damage|Disable for 1 turn,2,attack(d); sfxdamage(target[;] d); if (!simulation) runscript(~megaquest/equipmentcooldown~[;] [e[;] 1[;] self]);,Magic Dice,ODD|FREE5,,RED,change_power,change_power,,_metals,0,NO,NO,,,,,,,,,,,,,
Heavy Rapier_upgraded,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Magic Dice,ODD|FREE5,,RED,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Heavy Rapier_downgraded,Do [sword]<d6> damage|Disable for 2 turns,2,attack(d); sfxdamage(target[;] d); if (!simulation) runscript(~megaquest/equipmentcooldown~[;] [e[;] 2[;] self]);,Magic Dice,ODD|FREE5,,RED,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Flying Shield,Add [shield]<double> shield|Disable for 1 turn,1,inflictself(SHIELD[;] d * 2); if (!simulation) runscript(~megaquest/equipmentcooldown~[;] [e[;] 1[;] self]);,Protection,MAX3,,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Flying Shield_upgraded,Add [shield]<d6> shield|Disable for 1 turn,1,inflictself(SHIELD[;] d); if (!simulation) runscript(~megaquest/equipmentcooldown~[;] [e[;] 1[;] self]);,Protection,MAX3|FREE3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Flying Shield_downgraded,Add [shield]<d6> shield|Disable for 1 turn,1,inflictself(SHIELD[;] d); if (!simulation) runscript(~megaquest/equipmentcooldown~[;] [e[;] 1[;] self]);,Protection,MAX3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Fortress Button,Add [shield]6 shield|[gray](once per battle),1,inflictself(SHIELD[;] 6);,Barricade,ODD,,ORANGE,change_power,doublerequirements,,_shield,0,YES,YES,,,,,,,,,,,,,
Fortress Button_upgraded,Add [shield]8 shield|[gray](once per battle),1,inflictself(SHIELD[;] 8);,Barricade,ODD,,ORANGE,,,,_shield,0,YES,YES,,,,,,,,,,,,,
Mining Drone,Do [weaken]<d6> damage|(Start of turn: Weaken [weaken]1[]),1,attack(d[;] WEAKEN); sfxdamage(target[;] d);,Barricade,MAX3,,ORANGE,increaserange,complicate,,_weaken,0,NO,NO,,,,,,inflict(WEAKEN); sfx(~_weaken~); e.animate(~flashandshake~);,,,,,,,
Cassette Flip,[weaken]<d6> dmg + [weaken]1 weaken|Flip random dice,1,attack(d[;] WEAKEN); sfxdamage(target[;] d); inflict(WEAKEN); var dice = []; if (self.dicepool.length > 0) for (mydice in self.dicepool) if (simulation # mydice.available()) dice.push(mydice); if (dice.length > 0) {var mydice = rand(dice); if (!simulation) mydice.animatereroll(7 - mydice.basevalue[;] self.screenposition()); else mydice.basevalue = 7 - mydice.basevalue;},Megaflip,MAX3,,ORANGE,increaserange,decreaserange,,_weaken,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Nanobots,[shock]<double> dmg + [shock]1 shock|[gray](Reuseable),1,attack(d * 2[;] SHOCK); sfxdamage(target[;] d * 2); inflict(SHOCK);,Zap,REQUIRE1,,YELLOW,increaserange,doublerequirements,,_shock,-1,NO,NO,,,,,,,,,,,,,
Gigabots,[shock]<quadruple> dmg + [shock]4 shock|[gray](Reuseable),2,attack(d * 4[;] SHOCK); sfxdamage(target[;] d * 4); inflict(SHOCK[;] 4);,Zap,REQUIRE1|REQUIRE1|REQUIRE1|REQUIRE1,,YELLOW,increaserange,change_power,,_shock,-1,NO,NO,,,,,,,,,,,,,
Gigabots_downgraded,[shock]<double> dmg + [shock]2 shock|[gray](Reuseable),2,attack(d * 2[;] SHOCK); sfxdamage(target[;] d * 2); inflict(SHOCK[;] 2);,Zap,REQUIRE1|REQUIRE1|REQUIRE1|REQUIRE1,,YELLOW,,,,_shock,-1,NO,NO,,,,,,,,,,,,,
Cell Division,Inflict [poison]1[][;] roll a 2|[gray](Reuseable),1,inflict(POISON); givedice(2);,Poison Arrow,REQUIRE1,,PURPLE,change_power,change_power,,_poison,3,NO,NO,,,,,,,,,,,,,
Cell Division_upgraded,Inflict [poison]2[][;] roll two 1s|[gray](Reuseable),1,inflict(POISON[;] 2); givedice([1[;] 1]);,Poison Arrow,REQUIRE1,,PURPLE,,,,_poison,3,NO,NO,,,,,,,,,,,,,
Cell Division_downgraded,Inflict [poison]1 poison|[gray](Reuseable),1,inflict(POISON);,Poison Arrow,REQUIRE1,,PURPLE,,,,_poison,3,NO,NO,,,,,,,,,,,,,
Disc Gun,Do [sword]3 to both|[gray](Reuseable),1,attack(3); sfxdamage(target[;] 3); boomerang(3);,Pea Gun,COUNTDOWN,3,GRAY,change_power,change_power,,_metals,-1,NO,NO,,,,,,,,,,,,,
Disc Gun_upgraded,Do [sword]5 to both|[gray](Reuseable),1,attack(5); sfxdamage(target[;] 5); boomerang(5);,Pea Gun,COUNTDOWN,3,GRAY,,,,_metals,-1,NO,NO,,,,,,,,,,,,,
Disc Gun_downgraded,Do [sword]1 to both|[gray](Reuseable),1,attack(1); sfxdamage(target[;] 1); boomerang(1);,Pea Gun,COUNTDOWN,3,GRAY,,,,_metals,-1,NO,NO,,,,,,,,,,,,,
Andromeda Launcher,Delete the enemy|[gray](once per battle),2,if (!simulation) {var actMoveDown = new motion.actuators.SimpleActuator(target[;] 0.5[;] {y: target.y + 500}); var funcMoveDownComplete = new hscript.Parser().parseString(~target.y -= 1500; var actMoveUp = new motion.actuators.SimpleActuator(target[;] 0.5[;] {y: target.y + 1500}); actMoveUp.reverse(true); actMoveUp.onComplete(interp.execute[;] [funcMoveUpComplete]); actMoveUp.move();~); var funcMoveUpComplete = new hscript.Parser().parseString(~switchenemy(target[;] \~_\~); var actFixLevel = new motion.actuators.SimpleActuator(null[;] 1[;] null); function fixLevel(fighter[;] level) fighter.level = level; actFixLevel.onComplete(fixLevel[;] [target[;] target.level]); actFixLevel.move(); target.maxhp = 1; target.hp = 1; var statuses = target.status.copy(); if (statuses.length > 0) for (status in statuses) target.removestatus(status.type);~); var interp = new hscript.Interp(); interp.variables.set(~target~[;] target); interp.variables.set(~switchenemy~[;] switchenemy); interp.variables.set(~interp~[;] interp); interp.variables.set(~funcMoveUpComplete~[;] funcMoveUpComplete); actMoveDown.onComplete(interp.execute[;] [funcMoveDownComplete]); actMoveDown.move();} else pierceattack(target.hp);,Underflow,COUNTDOWN,40,PURPLE,threequartercountdown,change_power,,_andromeda,0,NO,YES,,,,,,,,,,,,,
Andromeda Launcher_downgraded,-1 dice to enemy|[gray](once per battle),2,if (!simulation) {var mydice = new elements.Dice(); mydice.basevalue = rand([1[;] 2[;] 3[;] 4[;] 5[;] 6]); mydice.x = 3840 - 400; mydice.y = -100; self.dicepool.push(mydice); mydice.frozen = true; var actMoveDown = new motion.actuators.SimpleActuator(mydice[;] 0.5[;] {y: mydice.y + 500}); var funcMoveDownComplete = new hscript.Parser().parseString(~mydice.y -= 1000; var actMoveUp = new motion.actuators.SimpleActuator(mydice[;] 0.5[;] {y: mydice.y + 1000}); actMoveUp.reverse(true); actMoveUp.onComplete(interp.execute[;] [funcMoveUpComplete]); actMoveUp.move();~); var funcMoveUpComplete = new hscript.Parser().parseString(~new elements.Skill(\~mqreducedice_op\~).execute(self[;] target); mydice.consumedice(); mydice.consumenow(); screenshake();~); var interp = new hscript.Interp(); interp.variables.set(~self~[;] self); interp.variables.set(~target~[;] target); interp.variables.set(~mydice~[;] mydice); interp.variables.set(~screenshake~[;] screenshake); interp.variables.set(~interp~[;] interp); interp.variables.set(~funcMoveUpComplete~[;] funcMoveUpComplete); actMoveDown.onComplete(interp.execute[;] [funcMoveDownComplete]); actMoveDown.move();} else bonus(1000);,Underflow,COUNTDOWN,40,PURPLE,,,,_andromeda,0,NO,YES,,,,,,,,,,,,,
Strawberry,Roll a 1000|[gray](once per game),1,givedice([1000]); if (!simulation) {runscript(~megaquest/specialdice~[;] [self]); e.temporary_thisturnonly = true;},Magic Six,COUNTDOWN,40,RED,halfcountdown,change_power,,_strawberry,0,YES,NO,,,,,,,,,,,,,
Strawberry_downgraded,Roll a 6,1,givedice(6);,Magic Six,COUNTDOWN,40,RED,,,,none,0,YES,NO,,,,,,,,,,,,,
Mystic Sword,Do [sword]<d6> damage[;] on 6[;]|run a random item effect,2,attack(d); sfxdamage(target[;] d); if (d == 6) {sfx(~useitem~); if (!simulation) {var eq = new elements.Equipment(rand(getequipmentlist(null[;] [][;] [~skillcard~[;] ~excludefromrandomlists~[;] ~robotonly~[;] ~witchonly~[;] ~onceperbattle~[;] ~alternateversion~]))); eq.temporary_thisturnonly = true; eq.equippedby = self; eq.x = e.x; eq.y = 2180 / 2 - eq.height / 2; eq.ready = false; eq.equipalpha = 0; runscript(~megaquest/fadeequipment~[;] [eq[;] 1[;] 1]); self.equipment.push(eq); runscript(~megaquest/delaycall~[;] [function (args) {args[0].ready = true; runscript(~megaquest/snap~[;] args);}[;] 1.0[;] eq[;] self[;] target[;] false]);} else bonus(1000);},Stardust,MIN4,,YELLOW,simplify,complicate,,none,0,NO,NO,,,,,,,,,,,,,
Daybreak,Do [fire]<d6> damage[;] on 6[;]|burn [fire]ALL instead,2,if (d != 6) {attack(d[;] FIRE); sfxdamage(target[;] d);} else inflict(FIRE[;] ALL);,Hellfire,NORMAL,,RED,change_power,change_power,,_fire,0,NO,NO,,,,,,,,,,,,,
Daybreak_upgraded,Do [fire]<d6> damage[;] on 6[;]|burn [fire]ALL dice,2,attack(d[;] FIRE); sfxdamage(target[;] d); if (d == 6) inflict(FIRE[;] ALL);,Hellfire,NORMAL,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Daybreak_downgraded,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Hellfire,NORMAL,,RED,,,,none,0,NO,NO,,,,,,,,,,,,,
Sparklesword,Do [sword]<d6> damage|On 6[;] split dice,2,attack(d); sfxdamage(target[;] d); if (d == 6) givedice(split(d)[;] ~splitdice~);,Magic Lockpick,NORMAL,,YELLOW,change_power,change_power,,none,0,NO,NO,,,,,,,,,,,,,
Sparklesword_upgraded,Do [sword]<d6> damage|Split the dice,2,attack(d); sfxdamage(target[;] d); givedice(split(d)[;] ~splitdice~);,Magic Lockpick,NORMAL,,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Sparklesword_downgraded,Do [sword]<d6> damage|On 1[;] split dice,2,attack(d); sfxdamage(target[;] d); if (d == 1) givedice(split(d)[;] ~splitdice~);,Magic Lockpick,NORMAL,,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Goldweaver,Do [sword]<d6> damage|Gain [gold]1 gold if|used on turn 3,2,attack(d); sfxdamage(target[;] d); if (turn == 3) {self.gold++; screenshake(); sfx(~stealgold~);},Harvest,EVEN,,YELLOW,change_power,change_power,,_metals,0,NO,NO,showgold,,,,,,,,,,,,
Goldweaver_upgraded,Do [sword]<d6> damage|Gain [gold]1 gold if|used on turn 2,2,attack(d); sfxdamage(target[;] d); if (turn == 2) {self.gold++; screenshake(); sfx(~stealgold~);},Harvest,EVEN,,YELLOW,,,,_metals,0,NO,NO,showgold,,,,,,,,,,,,
Goldweaver_downgraded,Do [sword]<d6> damage|Gain [gold]1 gold if|used on turn 4,2,attack(d); sfxdamage(target[;] d); if (turn == 4) {self.gold++; screenshake(); sfx(~stealgold~);},Harvest,EVEN,,YELLOW,,,,_metals,0,NO,NO,showgold,,,,,,,,,,,,
Creoreflections,In [jinx]<d6> turns[;]|roll two <d6>s,1,jinx(~Creoreflections~[;] ~roll two %VAR%s~[;] ~Roll two %VAR%s~[;] ~inflict(\~stash\~ + %VAR%[;] 2); sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] d);,Clone Device,NORMAL,,PINK,change_power,change_power,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Creoreflections_upgraded,In [jinx]<d6> turns[;]|roll three <d6>s,1,jinx(~Creoreflections+~[;] ~roll three %VAR%s~[;] ~Roll three %VAR%s~[;] ~inflict(\~stash\~ + %VAR%[;] 3); sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] d);,Clone Device,NORMAL,,PINK,,,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Creoreflections_downgraded,In [jinx]<d6> turns[;]|roll one <d6>,1,jinx(~Creoreflections-~[;] ~roll one %VAR%s~[;] ~Roll one %VAR%s~[;] ~inflict(\~stash\~ + %VAR%); sfx(\~magic_gaindice\~);~[;] self[;] target[;] d[;] d);,Clone Device,NORMAL,,PINK,,,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Control Globe,Convert enemy [ice]freeze|into [fire]2x burn,1,inflict(FIRE[;] getstatus(ICE) * 2); removestatus(ICE[;] ALL);,Ice Torch,ODD,,PURPLE,change_power,change_power,,_fire,0,NO,NO,,,,,,,,,,,,,
Control Globe_upgraded,Convert enemy [fire]burn|into [ice]2x freeze,1,inflict(ICE[;] getstatus(FIRE) * 2); removestatus(FIRE[;] ALL);,Ice Torch,ODD,,PURPLE,,,,_ice,0,NO,NO,,,,,,,,,,,,,
Control Globe_downgraded,Convert enemy [ice]freeze|into [fire]burn,1,inflict(FIRE[;] getstatus(ICE)); removestatus(ICE[;] ALL);,Ice Torch,ODD,,PURPLE,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Control Globe_weakened,Convert enemy [fire]burn|into [ice]freeze,1,inflict(ICE[;] getstatus(FIRE)); removestatus(FIRE[;] ALL);,Ice Torch,ODD,,PURPLE,,,,_ice,0,NO,NO,,,,,,,,,,,,,
Rubber Flippers,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,DOUBLES|DOUBLES,,BRIGHTCYAN,change_power,change_power,ice,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Rubber Flippers_upgraded,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,NORMAL|NORMAL,,BRIGHTCYAN,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Rubber Flippers_downgraded,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,REQUIRE6|REQUIRE6,,BRIGHTCYAN,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Rubber Flippers?,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,DOUBLES|DOUBLES,,BRIGHTCYAN,change_power,change_power,,_whooshweapons,0,NO,NO,alternateversion,,,,,,,,,,,,
Rubber Flippers?_upgraded,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,NORMAL|NORMAL,,BRIGHTCYAN,,,,_whooshweapons,0,NO,NO,alternateversion,,,,,,,,,,,,
Rubber Flippers?_downgraded,Freeze [ice]2 dice|Flip both dice,1,inflict(ICE[;] 2); sfx(~_ice~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,REQUIRE6|REQUIRE6,,BRIGHTCYAN,,,,_whooshweapons,0,NO,NO,alternateversion,,,,,,,,,,,,
Silicone Flippers,Burn [fire]2 dice|Flip both dice,1,inflict(FIRE[;] 2); sfx(~_fire~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,DOUBLES|DOUBLES,,RED,change_power,change_power,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Silicone Flippers_upgraded,Burn [fire]2 dice|Flip both dice,1,inflict(FIRE[;] 2); sfx(~_fire~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,NORMAL|NORMAL,,RED,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Silicone Flippers_downgraded,Burn [fire]2 dice|Flip both dice,1,inflict(FIRE[;] 2); sfx(~_fire~[;] ~~[;] 0.2); if (actualdice.length > 0) {var newdice = []; for (mydice in actualdice) if (mydice != null) newdice.push(7 - mydice.basevalue); givedice(newdice);},Megaflip,REQUIRE6|REQUIRE6,,RED,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Repeater,[sword]<d6> dmg[;] repeat <evar:repeater> times|(1 per countdown reduce),1,attack(d); if (!simulation && e.getvar(~repeater_copy~) == 0) {e.setvar(~repeater~[;] (e.getvar(~repeater~) + 1) * (1 + getstatusself(FURY)) - 1); removestatusself(FURY[;] ALL); for (i in 0...e.getvar(~repeater~)) {runscript(~megaquest/delaycall~[;] [function (args) {var eq = runscript(~megaquest/createequipment~[;] [e.name[;] e.upgraded[;] e.weakened[;] e.x[;] 720[;] self[;] true]); eq.setvar(~repeater~[;] args[0]); eq.setvar(~repeater_copy~[;] 1); runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]); eq.destroydice(); var diceindex = 0; for (mydice in actualdice) {var newdice = new elements.Dice(mydice.x[;] mydice.y); newdice.owner = self; newdice.copyfrom(mydice); self.dicepool.push(newdice); eq.assigndice(newdice[;] diceindex); diceindex++;} }[;] i * 0.5[;] e.getvar(~repeater~) - i - 1]);} },Overdrive,MAX2,,RED,increaserange,decreaserange,,_magic,0,NO,NO,,,,,e.setvar(~repeater~[;] 0);,,,e.setvar(~repeater~[;] e.getvar(~repeater~) + 1);,e.setvar(~repeater~[;] 0);,delay(1.0);,,e.preventdefault = true; e.maintainfury = true;,
Hot Hand,Burn [fire]<d6>[]. Each item use|makes this easier to play,1,inflict(FIRE[;] d); sfx(~_fire~[;] ~~[;] 0.2);,Ember,REQUIRE1,,RED,increaserange,change_power,,_whooshweapons,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots());,,runscript(~megaquest/makeequipmenteasiertoplay~[;] [e]);,,,,,,
Hot Hand_downgraded,Burn [fire]<d6>[]. 50% item uses|make this easier to play,1,inflict(FIRE[;] d); sfx(~_fire~[;] ~~[;] 0.2);,Ember,REQUIRE1,,RED,,,,_whooshweapons,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots());,,if ((self.equipmentused % 2) == 0) runscript(~megaquest/makeequipmenteasiertoplay~[;] [e]);,,,,,,
Domino Effect,Do [sword]<d6> damage[;] set|left slot to right dice,1,attack(d); sfxdamage(target[;] d); if (!simulation) {e.animate(~flashandshake~); e.changeslots([~REQUIRE~ + actualdice[1].basevalue[;] e.getslots()[1]]);},Shuriken,REQUIRE1|MAX5,,RED,change_power,change_power,,countdowntick_above3,0,NO,NO,,,,,,,,,,,,,
Domino Effect_upgraded,Do [sword]<d6> damage[;] set|left slot to right dice,1,attack(d); sfxdamage(target[;] d); if (!simulation) {e.animate(~flashandshake~); e.changeslots([~REQUIRE~ + actualdice[1].basevalue[;] e.getslots()[1]]);},Shuriken,REQUIRE1|NORMAL,,RED,,,,countdowntick_above3,0,NO,NO,,,,,,,,,,,,,
Domino Effect_downgraded,Do [sword]<d6> damage[;] set|left slot to right dice,1,attack(d); sfxdamage(target[;] d); if (!simulation) {e.animate(~flashandshake~); e.changeslots([~REQUIRE~ + actualdice[1].basevalue[;] e.getslots()[1]]);},Shuriken,REQUIRE1|MAX3,,RED,,,,countdowntick_above3,0,NO,NO,,,,,,,,,,,,,
Freeze Ray,Do [ice]<d6> damage|On 7[;] freeze [ice]2 dice,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE[;] 2);,Lockdown,REQUIRE1|NORMAL,,BRIGHTCYAN,change_power,change_power,ice,_plasma,0,NO,NO,,,,,,,,,,,,,
Freeze Ray_upgraded,Do [ice]<d6> damage|On 7[;] freeze [ice]2 dice,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE[;] 2);,Lockdown,FREE1|NORMAL,,BRIGHTCYAN,,,,_plasma,0,NO,NO,,,,,,,,,,,,,
Freeze Ray_downgraded,Do [ice]<d6> damage|On 7[;] freeze [ice]1 dice,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE);,Lockdown,REQUIRE1|NORMAL,,BRIGHTCYAN,,,,_plasma,0,NO,NO,,,,,,,,,,,,,
Freeze Ray?,Do [ice]<d6> damage|On 7[;] inflict [ice]2 freeze,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE[;] 2);,Lockdown,REQUIRE1|NORMAL,,BRIGHTCYAN,change_power,change_power,,_plasma,0,NO,NO,alternateversion,,,,,,,,,,,,
Freeze Ray?_upgraded,Do [ice]<d6> damage|On 7[;] inflict [ice]2 freeze,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE[;] 2);,Lockdown,FREE1|NORMAL,,BRIGHTCYAN,,,,_plasma,0,NO,NO,alternateversion,,,,,,,,,,,,
Freeze Ray?_downgraded,Do [ice]<d6> damage|On 7[;] inflict [ice]1 freeze,2,attack(d[;] ICE); sfx(~_ice~[;] ~~[;] 0.2); if (d == 7) inflict(ICE);,Lockdown,REQUIRE1|NORMAL,,BRIGHTCYAN,,,,_plasma,0,NO,NO,alternateversion,,,,,,,,,,,,
Illegal Device,Split dice in 3,1,givedice(split(d[;] 3)[;] ~splitdice~);,Unlucky Roll,REQUIRE1,,GREEN,change_power,change_power,,none,0,YES,NO,,,,,,,,,,,,,
Illegal Device_upgraded,Split dice in 4,1,givedice(split(d[;] 4)[;] ~splitdice~);,Unlucky Roll,REQUIRE1,,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Illegal Device_downgraded,Split dice in 2,1,givedice(split(d[;] 2)[;] ~splitdice~);,Unlucky Roll,REQUIRE1,,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Fierce Fight,Repeat next attack[;] disable|equipment without [quote][sword][quote],1,inflictself(FURY); if (!simulation && self.equipment.length > 0) for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.fulldescription.indexOf(~[sword]~) == -1) {if (eq.ready && eq.availablethisturn) {eq.animate(~flashandshake~); eq.availablethisturn = false; eq.unavailabletext = eq.displayname + eq.namemodifier; eq.unavailabledetails = [~Unavailable (Fierce Fight)~];} else if (!eq.ready && eq.availablenextturn) {eq.animate(~flashandshake~); eq.availablenextturn = false; eq.unavailabletext = eq.displayname + eq.namemodifier; eq.unavailabledetails = [~Unavailable (Fierce Fight)~];} },Fury,EVEN,,RED,simplify,complicate,,_fury,0,YES,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Reflector Field,Inflict [shock]<d6> shock|Better when [shield]shielded,1,inflict(SHOCK[;] d);,Zap,REQUIRE1,,YELLOW,increaserange,change_power,,_shock,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots()); e.setvar(~reflector_field~[;] 0);,if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},,,,,
Reflector Field_downgraded,Inflict [shock]<d6> shock,1,inflict(SHOCK[;] d);,Zap,REQUIRE1,,YELLOW,,,,_shock,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots()); e.setvar(~reflector_field~[;] 0);,,,,,,,,
Thermoabsorber,Freeze [ice]1 dice|+2 to dice value,1,inflict(ICE); givedice(d + 2);,Megabump,EVEN,,BRIGHTCYAN,change_power,change_power,ice,_ice,0,NO,NO,,,,,,,,,,,,,givedice(d);
Thermoabsorber_upgraded,Freeze [ice]1[;] +2 to dice|[gray](Reuseable),1,inflict(ICE); givedice(d + 2);,Megabump,EVEN,,BRIGHTCYAN,,,,_ice,2,NO,NO,,,,,,,,,,,,,givedice(d);
Thermoabsorber_downgraded,Freeze [ice]1 dice|Return the dice,1,inflict(ICE); givedice(d);,Megabump,EVEN,,BRIGHTCYAN,,,,_ice,0,NO,NO,,,,,,,,,,,,,givedice(d);
Thermoabsorber?,Inflict [ice]1 freeze|+2 to dice value,1,inflict(ICE); givedice(d + 2);,Megabump,EVEN,,BRIGHTCYAN,change_power,change_power,,_ice,0,NO,NO,alternateversion,,,,,,,,,,,,givedice(d);
Thermoabsorber?_upgraded,Inflict [ice]1[;] +2 to dice|[gray](Reuseable),1,inflict(ICE); givedice(d + 2);,Megabump,EVEN,,BRIGHTCYAN,,,,_ice,2,NO,NO,alternateversion,,,,,,,,,,,,givedice(d);
Thermoabsorber?_downgraded,Inflict [ice]1 freeze|Return the dice,1,inflict(ICE); givedice(d);,Megabump,EVEN,,BRIGHTCYAN,,,,_ice,0,NO,NO,alternateversion,,,,,,,,,,,,givedice(d);
Nautilus Shell,Add [shield]<d6> shield|Freeze [ice]1 dice,1,inflictself(SHIELD[;] d); inflict(ICE); sfx(~_ice~[;] ~~[;] 0.2);,Protection,MAX3,,BRIGHTCYAN,increaserange,decreaserange,ice,_shield,0,NO,NO,,,,,,,,,,,,,inflictself(SHIELD[;] d);
Nautilus Shell?,Add [shield]<d6> shield|Inflict [ice]1 freeze,1,inflictself(SHIELD[;] d); inflict(ICE); sfx(~_ice~[;] ~~[;] 0.2);,Protection,MAX3,,BRIGHTCYAN,increaserange,decreaserange,,_shield,0,NO,NO,alternateversion,,,,,,,,,,,,inflictself(SHIELD[;] d);
Power Pack,[shock]4 dmg + [shock]1 shock|[gray](Reuseable),2,attack(4[;] SHOCK); sfxdamage(target[;] 4); inflict(SHOCK);,Static Shock,EVEN,,YELLOW,change_power,change_power,,_shock,2,NO,NO,,,,,,,,,,,,,
Power Pack_upgraded,[shock]4 dmg + [shock]1 shock|[gray](Reuseable),2,attack(4[;] SHOCK); sfxdamage(target[;] 4); inflict(SHOCK);,Static Shock,EVEN,,YELLOW,,,,_shock,4,NO,NO,,,,,,,,,,,,,
Power Pack_downgraded,Do [shock]4 damage|[gray](Reuseable),2,attack(4[;] SHOCK); sfxdamage(target[;] 4);,Static Shock,EVEN,,YELLOW,,,,_shock,2,NO,NO,,,,,,,,,,,,,
Sonic Railgun,Do [weaken]4 damage|([weaken]Weaken on countdown),2,attack(4[;] WEAKEN); sfxdamage(target[;] 4);,Theremin,COUNTDOWN,4,ORANGE,change_power,change_power,,_plasma,0,NO,NO,,,,,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~sonic_railgun~)) {inflict(WEAKEN); sfx(~_weaken~); e.animate(~flashandshake~);} e.setvar(~sonic_railgun~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,,,,
Sonic Railgun_upgraded,Do [weaken]6 damage|([weaken]Weaken on countdown),2,attack(6[;] WEAKEN); sfxdamage(target[;] 6);,Theremin,COUNTDOWN,6,ORANGE,,,,_plasma,0,NO,NO,,,,,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~sonic_railgun~)) {inflict(WEAKEN); sfx(~_weaken~); e.animate(~flashandshake~);} e.setvar(~sonic_railgun~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,,,,
Sonic Railgun_downgraded,Do [weaken]4 damage,2,attack(4[;] WEAKEN); sfxdamage(target[;] 4);,Theremin,COUNTDOWN,4,ORANGE,,,,_plasma,0,NO,NO,,,,,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,e.setvar(~sonic_railgun~[;] e.remainingcountdown);,,,,
Transactor Revolver,Spend [gold]1 enemy gold|to do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d); target.gold--;,Harvest,EVEN,,YELLOW,simplify,complicate,,_plasma,0,NO,NO,showgold,,,,,,,,,,,,
Gotcha!,Steal random enemy|weapon for this battle,2,if (!simulation) {var weapons = []; switch (~~ + target.layout) {case ~EQUIPMENT~: weapons = runscript(~megaquest/getequipmentbycategory~[;] [~weapon~[;] target.equipment]); case ~SPELLBOOK~: {var spellEquipment = []; for (i in 1...7) if (Spellbook.spellname(i) != ~~) spellEquipment.push(new elements.Equipment(Spellbook.spellname(i))); weapons = runscript(~megaquest/getequipmentbycategory~[;] [~weapon~[;] spellEquipment]);} case ~DECK~: {var deckEquipment = []; for (card in Deck.getcards(~all~)) deckEquipment.push(card.equipment); weapons = runscript(~megaquest/getequipmentbycategory~[;] [~weapon~[;] deckEquipment]);}} if (weapons.length > 0) {var weapon = rand(weapons); giveequipment(weapon.name + weapon.namemodifier[;] false[;] self.stolencard == e[;] (self.stolencard != e ? e : null)); var gotchaEquipment = target.getvar(~mqgotchaequipment~); if (gotchaEquipment.length == null) gotchaEquipment = []; gotchaEquipment.push(weapon); target.setvar(~mqgotchaequipment~[;] gotchaEquipment);}} else bonus(1000); inflictself(~mqgotchaused~);,Steal,EVEN,,YELLOW,simplify,complicate,,useitem,0,NO,NO,excludefromrandomlists|cannotshapeshift,,,,,,,,,delay(1.0);,,,
Secret Compartment,Copy one of|your items,2,if (!simulation) {var copy = rand(getequipmentlist(self[;] [][;] [~skillcard~[;] ~cannotshapeshift~])); giveequipment(copy[;] true[;] self.stolencard == e[;] (self.stolencard != e ? e : null));} else bonus(getstatusself(~mqgotchaused~) > 0 ? 1000 : -1000);,Mailbox,EVEN,,YELLOW,simplify,complicate,,upgradeequipment,0,YES,NO,excludefromrandomlists|cannotshapeshift,,,,,,,,,delay(1.0);,,,
Power Spike,Do [shock]3 damage|Inflict [shock]1 shock,1,attack(3[;] SHOCK); sfxdamage(target[;] 3); inflict(SHOCK);,Zap,COUNTDOWN,6,YELLOW,twothirdcountdown,change_power,,_shock,0,NO,NO,,,,,,,,,,,,,
Bluff Sword,Do [sword]<d6> damage|Might switch target,2,attack(d); sfxdamage(target[;] d); // doesn't actually switch target lol,Plasma Gun,NORMAL,,PURPLE,change_power,change_power,,_metals,0,NO,NO,,,,,,,,,,,,,
Bluff Sword_upgraded,Do [sword]<d6> damage[;] chance of|switching target reduced,2,attack(d); sfxdamage(target[;] d);,Plasma Gun,NORMAL,,PURPLE,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Bluff Sword_downgraded,Do [sword]<d6> damage[;] chance of|switching target doubled,2,attack(d); sfxdamage(target[;] d);,Plasma Gun,NORMAL,,PURPLE,,,,_metals,0,NO,NO,,,,,,,,,,,,,
Harpoon,Do [sword]<d6> damage[;] retrieve|the last item that was|directed at the enemy,2,attack(d); sfxdamage(target[;] d); if (!simulation && self.equipmenthistory.length > 0) {var eq = null; for (i in 0...(self.equipmenthistory.length)) if (!self.equipmenthistory[self.equipmenthistory.length - 1 - i].hastag(~cannotreuse~) && !self.equipmenthistory[self.equipmenthistory.length - 1 - i].hastag(~skillcard~) && self.equipmenthistory[self.equipmenthistory.length - 1 - i].y < 0 && self.equipmenthistory[self.equipmenthistory.length - 1 - i] != e) eq = self.equipmenthistory[self.equipmenthistory.length - 1 - i]; if (eq != null) {if (eq.reuseable != 0) {if (eq.ready && eq.usesleft < eq.reuseable) eq.animate(~flashandshake~); eq.usesleft = eq.reuseable; eq.updatereuseabledescription();} if (!eq.ready) {eq.ready = true; eq.active = true; eq.show = true; eq.removedice(); eq.x = e.x; eq.y = -eq.height * 1.5; eq.finalpos = new openfl.geom.Point(eq.x[;] 2180 / 2 - eq.height / 2); runscript(~megaquest/fixequipmentposition~[;] [self]);}}} else bonus(getstatusself(~mqharpoonitemsused~) > 0 ? 1000 : -1000); inflictself(~mqharpoonitemsused~);,Hook,MAX4,,GREEN,simplify,decreaserange,,_whooshweapons,0,NO,NO,excludefromrandomlists,,,,,,if (e.getvar(~harpoon_items_used~) < self.equipmentused) inflictself(~mqharpoonitemsused~); e.setvar(~harpoon_items_used~[;] self.equipmentused);,,,,,,
Cleaning Services,-1 dice to enemy|[gray](Reuseable),2,if (!simulation) runscript(~megaquest/addextradice~[;] [target[;] -1]); else bonus(1000); screenshake(); inflictself(~mqcleaningservicesused~);,Black Hole,ODD,,PURPLE,change_power,change_power,,_curse,2,NO,NO,,,,,,,,,,,,,
Cleaning Services_upgraded,-1 dice to enemy|[gray](Reuseable),2,if (!simulation) runscript(~megaquest/addextradice~[;] [target[;] -1]); else bonus(1000); screenshake(); inflictself(~mqcleaningservicesused~);,Black Hole,ODD,,PURPLE,,,,_curse,-1,NO,NO,,,,,,,,,,,,,
Cleaning Services_downgraded,-1 dice to enemy,2,if (!simulation) runscript(~megaquest/addextradice~[;] [target[;] -1]); else bonus(1000); screenshake(); inflictself(~mqcleaningservicesused~);,Black Hole,ODD,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Reverse Flow,[sword]3 dmg per missing dice|Refill enemy dice,2,var dmg = 0; var mult = 3; if (!simulation) {if (target.extradice < 0) {dmg += mult * -target.extradice; target.extradice = 0;} if (getstatus(~mqcpu-~) > 0) {dmg += mult * (getstatus(~mqcpu-~) / 2); target.roll_target += getstatus(~mqcpu-~); removestatus(~mqcpu-~[;] ALL);}} else dmg += mult * getstatusself(~mqcleaningservicesused~); attack(dmg); sfxdamage(target[;] dmg); removestatusself(~mqcleaningservicesused~[;] ALL);,Black Hole,COUNTDOWN,12,RED,change_power,change_power,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Reverse Flow_upgraded,[sword]4 dmg per missing dice|Refill enemy dice,2,var dmg = 0; var mult = 4; if (!simulation) {if (target.extradice < 0) {dmg += mult * -target.extradice; target.extradice = 0;} if (getstatus(~mqcpu-~) > 0) {dmg += mult * (getstatus(~mqcpu-~) / 2); target.roll_target += getstatus(~mqcpu-~); removestatus(~mqcpu-~[;] ALL);}} else dmg += mult * getstatusself(~mqcleaningservicesused~); attack(dmg); sfxdamage(target[;] dmg); removestatusself(~mqcleaningservicesused~[;] ALL);,Black Hole,COUNTDOWN,12,RED,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Reverse Flow_downgraded,[sword]2 dmg per missing dice|Refill enemy dice,2,var dmg = 0; var mult = 2; if (!simulation) {if (target.extradice < 0) {dmg += mult * -target.extradice; target.extradice = 0;} if (getstatus(~mqcpu-~) > 0) {dmg += mult * (getstatus(~mqcpu-~) / 2); target.roll_target += getstatus(~mqcpu-~); removestatus(~mqcpu-~[;] ALL);}} else dmg += mult * getstatusself(~mqcleaningservicesused~); attack(dmg); sfxdamage(target[;] dmg); removestatusself(~mqcleaningservicesused~[;] ALL);,Black Hole,COUNTDOWN,12,RED,,,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,
Technokinesis,Do [sword]<d6> damage|On 6[;] jam enemy attack,2,attack(d); sfxdamage(target[;] d); if (d == 6) {inflict(~mqjam~); sfx(~_mqjam~[;] ~~[;] 0.2);},Microchip,MIN4,,RED,simplify,complicate,,none,0,NO,NO,,,,,,,,,,,,,
Security Breach,Jam next enemy attack,1,inflict(~mqjam~);,Microchip,REQUIRE5,,RED,change_power,doublerequirements,,_mqjam,0,NO,NO,,1,,,,,,,,,,,
Security Breach_upgraded,Jam enemy attack [mqjam]x2,1,inflict(~mqjam~[;] 2);,Microchip,REQUIRE5,,RED,,,,_mqjam,0,NO,NO,,,,,,,,,,,,,
Overpower,Get a six[;] but jam|your next attack,1,givedice(6); inflictself(~mqjam~);,Magic Six,REQUIRE1,,RED,simplify,change_power,,_mqjam,0,YES,NO,,1,,,,,,,,,,,
Overpower_downgraded,Get a new dice[;] but|jam your next attack,1,givedice(); inflictself(~mqjam~);,Magic Six,REQUIRE1,,RED,,,,_mqjam,0,YES,NO,,,,,,,,,,,,,
Randomizer,Blind [blind]1 dice[;]|get a new dice,1,inflict(BLIND); givedice();,Random Roll,MAX3,,PURPLE,simplify,complicate,blind,_blind,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,givedice();
Randomizer?,Inflict [blind]Blind for 1 turn[;]|get a new dice,1,inflict(BLIND); givedice();,Random Roll,MAX3,,PURPLE,simplify,complicate,,_blind,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,givedice();
Drain Bamage,Drain [heart]<d6> health[;] blind|[blind]ALL your dice next turn,1,drain(d); jinx(~Drain_Bamage~[;] ~blind [blind]ALL dice~[;] ~Blind [blind]ALL dice~[;] ~inflict(BLIND[;] ALL); sfx(\~_blind\~);~[;] self[;] target[;] 1[;] 0);,Stardust,MAX3,,PURPLE,change_power,decreaserange,blind,_drain,0,NO,NO,,,,,,,,,,,,,
Drain Bamage_upgraded,Drain [heart]<d6> health[;] blind|[blind]2 your dice next turn,1,drain(d); jinx(~Drain_Bamage+~[;] ~blind [blind]%VAR% dice~[;] ~Blind [blind]%VAR% dice~[;] ~inflict(BLIND[;] %VAR%); sfx(\~_blind\~);~[;] self[;] target[;] 1[;] 2);,Stardust,MAX3,,PURPLE,,,,_drain,0,NO,NO,,,,,,,,,,,,,
Drain Bamage?,Drain [heart]<d6> health[;]|self-blind [blind]2 next turn,1,drain(d); jinx(~Drain_Bamage~[;] ~blind for [blind]%VAR% turns~[;] ~Blind for [blind]%VAR% turns~[;] ~inflict(BLIND[;] %VAR%); sfx(\~_blind\~);~[;] self[;] target[;] 1[;] 2);,Stardust,MAX3,,PURPLE,change_power,decreaserange,,_drain,0,NO,NO,,,,,,,,,,,,,
Drain Bamage?_upgraded,Drain [heart]<d6> health[;]|self-blind [blind]1 next turn,1,drain(d); jinx(~Drain_Bamage+~[;] ~blind for [blind]1 turn~[;] ~Blind for [blind]1 turn~[;] ~inflict(BLIND); sfx(\~_blind\~);~[;] self[;] target[;] 1[;] 1);,Stardust,MAX3,,PURPLE,,,,_drain,0,NO,NO,,,,,,,,,,,,,
Void Chunk,Do [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); sfxdamage(target[;] d); inflict(POISON);,Poison Arrow,ODD,,PURPLE,simplify,change_power,,_poison,0,NO,NO,,1,,,,,,,,,,,
Void Chunk_downgraded,Do [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); sfxdamage(target[;] d); inflict(POISON);,Poison Arrow,MAX3,,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Purple Haze,Do [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); sfxdamage(target[;] d); inflict(POISON);,Poison Arrow,NORMAL|NORMAL,,RED,change_power,complicate,,_poison,0,NO,NO,,1,,,,,,,,,,,
Purple Haze_upgraded,Do [sword]<d6> damage|Inflict [poison]2 poison,1,attack(d); sfxdamage(target[;] d); inflict(POISON[;] 2);,Poison Arrow,NORMAL|NORMAL,,RED,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Dark Arts,Do [sword]<d6> damage|Curse enemy,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Cackle,ODD,,PURPLE,simplify,change_power,,_curse,0,NO,NO,,1,,,,,,,,,,,
Dark Arts_downgraded,Do [sword]<d6> damage|Curse enemy,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Cackle,MAX3,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Hexahedron,Do [sword]<d6> damage|Curse enemy,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Cackle,NORMAL|NORMAL,,RED,change_power,complicate,,_curse,0,NO,NO,,1,,,,,,,,,,,
Hexahedron_upgraded,Do [sword]<d6> damage|Curse enemy,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Cackle,NORMAL|NORMAL,,RED,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Sheer Fear,Do [sword]<d6> damage|Silence Enemy,1,attack(d); sfxdamage(target[;] d); inflict(SILENCE);,Stardust,ODD,,PURPLE,simplify,change_power,,_silence,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Sheer Fear_downgraded,Do [sword]<d6> damage|Silence Enemy,1,attack(d); sfxdamage(target[;] d); inflict(SILENCE);,Stardust,MAX3,,PURPLE,,,,_silence,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Gatekeeper,Do [sword]<d6> damage|Lock [lock]1 dice,1,attack(d); sfxdamage(target[;] d); inflict(LOCK);,Lockdown,ODD,,PURPLE,simplify,change_power,,_lock,0,NO,NO,,1,,,,,,,,,,,
Gatekeeper_downgraded,Do [sword]<d6> damage|Lock [lock]1 dice,1,attack(d); sfxdamage(target[;] d); inflict(LOCK);,Lockdown,MAX3,,PURPLE,,,,_lock,0,NO,NO,,,,,,,,,,,,,
Obliteration,Do [sword]4 damage,1,attack(4); sfxdamage(target[;] 4);,Pea Gun,NORMAL,,PURPLE,change_power,complicate,,_magic,0,NO,NO,,1,,,,,,,,,,,
Obliteration_upgraded,Do [sword]5 damage,1,attack(5); sfxdamage(target[;] 5);,Pea Gun,NORMAL,,PURPLE,,,,_magic,0,NO,NO,,,,,,,,,,,,,
Eternal Eclipse,Hide all health bars|[gray](once per battle),2,if (!simulation) {inflict(~cannotseeenemyhealth~); inflictself(~cannotseeenemyhealth~); runscript(~megaquest/getrules~).lowhpmusic = false;} else bonus(1000);,Cackle,COUNTDOWN,20,PURPLE,halfcountdown,change_power,,_blind,0,NO,YES,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Eternal Eclipse_downgraded,Hide your health bar|[gray](once per battle),2,inflictself(~cannotseeenemyhealth~); bonus(1000);,Cackle,COUNTDOWN,20,PURPLE,,,,_blind,0,YES,YES,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Fangs,Do [shock]<slotdoubles> + 3 damage|Inflict [shock]2 shock,2,attack(d + 3[;] SHOCK); sfxdamage(target[;] d + 3); inflict(SHOCK[;] 2);,Static Shock,DOUBLES|DOUBLES,,YELLOW,change_power,change_power,,_shock,0,NO,NO,,,,,,,,,,,,,
Fangs_upgraded,Do [shock]<slotdoubles> + 4 damage|Inflict [shock]2 shock,2,attack(d + 4[;] SHOCK); sfxdamage(target[;] d + 4); inflict(SHOCK[;] 2);,Static Shock,DOUBLES|DOUBLES,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Fangs_downgraded,Do [sword]<slotdoubles> + 3 damage,2,attack(d + 3); sfxdamage(target[;] d + 3);,Static Shock,DOUBLES|DOUBLES,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Cursed Bite,Replace enemy equipment|with your equipment,2,inflict(~mqdirewolfcurse~);,Reversal,REQUIRE5,,PURPLE,change_power,doublerequirements,,_curse,0,NO,NO,,,,,,,,,,,,,
Cursed Bite_upgraded,Replace enemy equipment|with your equipment,2,inflict(~mqdirewolfcurse~);,Reversal,REQUIRE1,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Empyrean Blaster,Do [fire]4 damage|Burn [fire]1 on countdown,1,attack(4[;] FIRE); sfxdamage(target[;] 4);,Blowtorch,COUNTDOWN,4,RED,change_power,change_power,,_fire,0,NO,NO,,,,,,,,if (e.getvar(~checkedcountdowntriggerdice~).length == null) e.setvar(~checkedcountdowntriggerdice~[;] []); if (e.dicehistory.length > 0 && e.getvar(~checkedcountdowntriggerdice~).indexOf(e.dicehistory[e.dicehistory.length - 1]) == -1) {e.getvar(~checkedcountdowntriggerdice~).push(e.dicehistory[e.dicehistory.length - 1]); e.animate(~flashandshake~); inflict(FIRE); sfx(~_fire~);},,,,,
Empyrean Blaster_upgraded,Do [fire]5 damage|Burn [fire]1 on countdown,1,attack(5[;] FIRE); sfxdamage(target[;] 5);,Blowtorch,COUNTDOWN,5,RED,,,,_fire,0,NO,NO,,,,,,,,if (e.getvar(~checkedcountdowntriggerdice~).length == null) e.setvar(~checkedcountdowntriggerdice~[;] []); if (e.dicehistory.length > 0 && e.getvar(~checkedcountdowntriggerdice~).indexOf(e.dicehistory[e.dicehistory.length - 1]) == -1) {e.getvar(~checkedcountdowntriggerdice~).push(e.dicehistory[e.dicehistory.length - 1]); e.animate(~flashandshake~); inflict(FIRE); sfx(~_fire~);},,,,,
Empyrean Blaster_downgraded,Do [fire]4 damage|Burn [fire]1 dice,1,attack(4[;] FIRE); sfxdamage(target[;] 4); inflict(FIRE);,Blowtorch,COUNTDOWN,4,RED,,,,_fire,0,NO,NO,,,,,,,,if (e.getvar(~checkedcountdowntriggerdice~).length == null) e.setvar(~checkedcountdowntriggerdice~[;] []); if (e.dicehistory.length > 0 && e.getvar(~checkedcountdowntriggerdice~).indexOf(e.dicehistory[e.dicehistory.length - 1]) == -1) {e.getvar(~checkedcountdowntriggerdice~).push(e.dicehistory[e.dicehistory.length - 1]);},,,,,
Pumpkin Helmet,Add [shield]<d6> shield|On 5[;] curse yourself,1,inflictself(SHIELD[;] d); if (d == 5) {inflictself(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Protection,ODD,,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Pumpkin Helmet_upgraded,Add [shield]<d6> shield|On 5[;] curse everyone,1,inflictself(SHIELD[;] d); if (d == 5) {inflictself(CURSE); inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Protection,ODD,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Pumpkin Helmet_downgraded,Add [shield]<d6> shield|Curse yourself,1,inflictself(SHIELD[;] d); inflictself(CURSE); sfx(~_curse~[;] ~~[;] 0.2);,Protection,ODD,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Jumpscare Button,Inflict [curse]3 curse|[gray](once per battle),1,inflict(CURSE[;] 6);,Cackle,ODD,,PURPLE,change_power,doublerequirements,,_curse,0,NO,YES,,,,,,,,,,,,,
Jumpscare Button_upgraded,Inflict [curse]6 curse|[gray](once per battle),1,inflict(CURSE[;] 6);,Cackle,ODD,,PURPLE,,,,_curse,0,NO,YES,,,,,,,,,,,,,
Phasmophobia,Curse self[;]|get a new dice,1,inflictself(CURSE); givedice();,Magic Dice,NORMAL,,PURPLE,change_power,change_power,,_curse,0,YES,NO,,1,,,,,,,,,,,
Phasmophobia_upgraded,Curse self[;] reroll dice|[gray](Reuseable),1,inflictself(CURSE); givedice();,Magic Dice,NORMAL,,PURPLE,,,,_curse,2,YES,NO,,,,,,,,,,,,,
Phasmophobia_downgraded,Curse self twice[;]|get a new dice,1,inflictself(CURSE[;] 2); givedice();,Magic Dice,NORMAL,,PURPLE,,,,_curse,0,YES,NO,,,,,,,,,,,,,
Selenophobia,+1 dice this fight|+1 curse to self each turn,1,self.extradice++; if (simulation) {jinx(~Selenophobia~[;] ~curse self~[;] ~Curse self~[;] ~inflict(CURSE); sfx(\~_curse\~);~[;] self[;] target[;] 1[;] 0);} else {runscript(~megaquest/repeatingjinx~[;] [~Selenophobia~[;] ~curse self~[;] ~Curse self~[;] ~inflict(CURSE); sfx(\~_curse\~);~[;] self[;] target[;] 1[;] 0]);},Clone Device,EVEN,,PURPLE,simplify,complicate,,magic_gaindice,0,YES,NO,,1,,,,,,,,,,,
Cursed Image,Curse enemy[;]|roll a 6,1,inflict(CURSE); givedice(6);,Upgraded Six,REQUIRE3,,PURPLE,change_power,change_power,,_curse,0,NO,NO,,,,,,,,,,,,,givedice(6);
Cursed Image_upgraded,Curse enemy[;]|roll a 7,1,inflict(CURSE); givedice([7]); if (!simulation) runscript(~megaquest/specialdice~[;] [self]);,Upgraded Six,REQUIRE6,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,givedice([7]); runscript(~megaquest/specialdice~[;] [self]);
Cursed Image_downgraded,Curse enemy,1,inflict(CURSE);,Upgraded Six,REQUIRE3,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Demon Incarnate,Do [sword]12 damage[;] easier to|play when you are cursed,2,attack(12); sfxdamage(target[;] 12); if (getstatusself(CURSE) > 0) sfx(~_curse~);,Catapult,REQUIRE6|REQUIRE6,,PURPLE,change_power,change_power,,none,0,NO,NO,,,inflictself(~mqequipmentchangeswhencursed~);,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots());,,,,,,,,
Demon Incarnate_upgraded,Do [sword]13 damage[;] easier to|play when you are cursed,2,attack(13); sfxdamage(target[;] 13); if (getstatusself(CURSE) > 0) sfx(~_curse~);,Catapult,REQUIRE6|REQUIRE6,,PURPLE,,,,none,0,NO,NO,,,inflictself(~mqequipmentchangeswhencursed~);,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots());,,,,,,,,
Demon Incarnate_downgraded,Do [sword]6 damage[;] easier to|play when you are cursed,2,attack(6); sfxdamage(target[;] 6); if (getstatusself(CURSE) > 0) sfx(~_curse~);,Catapult,REQUIRE6|REQUIRE6,,PURPLE,,,,none,0,NO,NO,,,inflictself(~mqequipmentchangeswhencursed~);,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots());,,,,,,,,
Spookknife,Do [sword]<d6> damage|Reuseable if you are cursed,1,attack(d); sfxdamage(target[;] d);,Protection,MAX4,,ORANGE,increaserange,decreaserange,,_metals,0,NO,NO,,,inflictself(~mqequipmentchangeswhencursed~);,,e.reuseable = 0; e.usesleft = 0; e.reuseableanimation = 0; e.tempreuseableequipment = []; e.fulldescription = new elements.Equipment(e.name + e.namemodifier).fulldescription; var split = e.fulldescription.split(~#~.substr(0[;] 1)); e.overwritefinalline = split[split.length - 1];,,,,,,,,
Bottled Message,Gain a blessing|or a curse,1,if (!simulation) {if (chance(50) runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); else {inflictself(CURSE); sfx(~_curse~);}} else bonus(1000);,Power Up,ODD,,GREEN,simplify,complicate,,none,0,YES,NO,,,,,,,,,,,,,
Exhaust Pipe,Burn [fire]<d6> dice|On 3[;] curse enemy,2,inflict(FIRE[;] d); if (d == 3) {inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Blowtorch,MAX3,,RED,change_power,change_power,,_fire,0,NO,NO,,,,,,,,,,,,,
Exhaust Pipe_upgraded,Burn [fire]<d6> dice|On 4[;] curse enemy,2,inflict(FIRE[;] d); if (d == 4) {inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);},Blowtorch,MAX3,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Exhaust Pipe_downgraded,Burn [fire]<d6> dice,2,inflict(FIRE[;] d);,Blowtorch,MAX3,,RED,,,,_fire,0,NO,NO,,,,,,,,,,,,,
Spider Nest,[sword]<double> dmg + [curse]1 curse|[gray](Reuseable),1,attack(d * 2); sfxdamage(target[;] d * 2); inflict(CURSE);,Cackle,REQUIRE1,,PURPLE,increaserange,doublerequirements,,_curse,-1,NO,NO,,,,,,,,,,,,,
Corruptor Field,[sword]<d6> damage + [curse]1 curse|Better when [shield]shielded,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Zap,REQUIRE1,,PURPLE,increaserange,change_power,,_curse,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots()); e.setvar(~reflector_field~[;] 0);,if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},if (getstatusself(SHIELD) > 0 && e.getvar(~reflector_field~) == 0) {e.setvar(~reflector_field~[;] 1); runscript(~megaquest/makeequipmenteasiertoplay~[;] [e[;] 2]);},,,,,
Corruptor Field_downgraded,Do [sword]<d6> damage|Curse enemy,1,attack(d); sfxdamage(target[;] d); inflict(CURSE);,Zap,REQUIRE1,,PURPLE,,,,_curse,0,NO,NO,,,,,e.changeslots(new elements.Equipment(e.name + e.namemodifier).getslots()); e.setvar(~reflector_field~[;] 0);,,,,,,,,
Vile Growth,Gain [reduce]1 reduce|and [curse]1 curse,1,inflictself(REDUCE); inflictself(CURSE);,Protection,ODD,,PURPLE,change_power,change_power,,_curse,0,YES,NO,,,,,,,,,,,,,
Vile Growth_upgraded,Gain [reduce]2 reduce|and [curse]2 curse,1,inflictself(REDUCE[;] 2); inflictself(CURSE[;] 2);,Protection,ODD,,PURPLE,,,,_curse,0,YES,NO,,,,,,,,,,,,,
Vile Growth_downgraded,Gain [reduce]1 reduce|or [curse]1 curse,1,if (chance(50)) {inflictself(REDUCE); sfx(~_shield~);} else {inflictself(CURSE); sfx(~_curse~);},Protection,ODD,,PURPLE,,,,none,0,YES,NO,,,,,,,,,,,,,
Dreary Fog,Convert ALL statuses|to curse,1,if (!simulation) {var curses = 0; if (self.status.length > 0) for (status in self.status.copy()) if (!status.invisible) {curses += status.value; self.removestatus(status.type);} inflictself(CURSE[;] curses); curses = 0; if (target.status.length > 0) for (status in target.status.copy()) if (!status.invisible) {curses += status.value; target.removestatus(status.type);} inflict(CURSE[;] curses);} else {inflict(CURSE[;] 5); inflictself(CURSE[;] 5);},Cackle,NORMAL,,PURPLE,change_power,change_power,,_curse,0,NO,NO,,1,,,,,,,,,,,
Dreary Fog_upgraded,Convert enemy statuses|to curse,1,if (!simulation) {var curses = 0; if (target.status.length > 0) for (status in target.status.copy()) if (!status.invisible) {curses += status.value; target.removestatus(status.type);} inflict(CURSE[;] curses);} else {inflict(CURSE[;] 5); inflictself(CURSE[;] 5);},Cackle,NORMAL,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Dreary Fog_downgraded,Convert your statuses|to curse,1,if (!simulation) {var curses = 0; if (self.status.length > 0) for (status in self.status.copy()) if (!status.invisible) {curses += status.value; self.removestatus(status.type);} inflictself(CURSE[;] curses);} else {inflict(CURSE[;] 5); inflictself(CURSE[;] 5);},Cackle,NORMAL,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Grave Mistake,Give enemy a <d6>|and curse them,1,inflict(~stash~ + d); inflict(CURSE);,Cackle,EVEN,,PURPLE,simplify,complicate,,_curse,0,NO,NO,,,,,,,,,,,,,
Backfire@mqmimicremix,Lose [heart]5 health,1,pierceattackself(5); sfxdamage(self[;] 5);,Infinity Mirror,REQUIRE1,,PURPLE,change_backfire,change_power,,_curse,0,YES,NO,,1,,,,,,,,,,,
Backfire@mqmimicremix_downgraded,Lose [heart]15 health,1,pierceattackself(15); sfxdamage(self[;] 5);,Infinity Mirror,REQUIRE1,,PURPLE,,,,_curse,0,YES,NO,,,,,,,,,,,,,
Backfire@mqmimicremix_weakened,Lose [heart]15 health,1,pierceattackself(15); sfxdamage(self[;] 5);,Infinity Mirror,REQUIRE1,,PURPLE,,,,_curse,0,YES,NO,,,,,,,,,,,,,
Backfire@mqmimicremix_upgraded,Lose [heart]10 health,1,pierceattackself(10); sfxdamage(self[;] 5);,Infinity Mirror,REQUIRE1,,PURPLE,,,,_curse,0,YES,NO,,,,,,,,,,,,,
Gasoline,Do [fire]<d6> damage per|[fire]Burn on the enemy,2,var dmg = d * getstatus(FIRE); attack(dmg[;] FIRE); sfxdamage(target[;] dmg);,Blowtorch,MAX3,,RED,increaserange,decreaserange,,_fire,0,NO,NO,,,,,,,,,,,,,
Horn,Add [shield]<d6> shield[;]|get a new dice,1,inflictself(SHIELD[;] d); givedice();,Protection,MAX4,,ORANGE,increaserange,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Horn_downgraded,Add [shield]<d6> shield,1,inflictself(SHIELD[;] d);,Protection,MAX4,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Haunting Laugh,Curse enemy[;] double|if you are cursed,2,inflict(CURSE[;] getstatusself(CURSE) > 0 ? 2 : 1);,Cackle,EVEN,,PURPLE,change_power,change_power,,_curse,0,NO,NO,,,,,,,,,,,,,
Haunting Laugh_upgraded,Curse enemy[;] triple|if you are cursed,2,inflict(CURSE[;] getstatusself(CURSE) > 0 ? 3 : 1);,Cackle,EVEN,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Haunting Laugh_downgraded,Curse enemy,2,inflict(CURSE);,Cackle,EVEN,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Dummy Sword,Do [sword]<d6> damage,2,attack(d); sfxdamage(target[;] d);,Broken Gadget,,,RED,,noeffect,,_whooshweapons,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Clock,Do [shock]<d6> damage|Inflict [shock]2 shock,2,attack(d[;] SHOCK); sfxdamage(target[;] d); inflict(SHOCK[;] 2);,Zap,EVEN,,YELLOW,simplify,change_power,,_shock,0,NO,NO,,,,,,,,,,,,,
Clock_downgraded,Do [shock]<d6> damage|Inflict [shock]1 shock,2,attack(d[;] SHOCK); sfxdamage(target[;] d); inflict(SHOCK);,Zap,EVEN,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Annoying Chatter,Silence Enemy,1,inflict(SILENCE);,Stardust,COUNTDOWN,12,PURPLE,halfcountdown,noeffect,,_silence,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Short Fuse,Do [sword]999 damage|in <var:mqshortfuse_max> minutes,2,if (!simulation) runscript(~megaquest/shortfuse~[;] [self[;] target[;] attack[;] sfxdamage[;] sfx]); else bonus(1000); inflictself(~mqshortfuseused~);,Stardust,EVEN,,RED,simplify,complicate,,none,0,NO,NO,excludefromrandomlists|cannotsteal|mqshortfuse,,self.setvar(~mqshortfuse_max~[;] loadtext(~megaquest/options/shortfuse~)[0]);,,,,,,,,,,
Distraction,Reduce Short Fuse|counter by 2x<slotdoubles>,1,if (!simulation) {self.setvar(~mqshortfuse_reduce~[;] self.getvar(~mqshortfuse_reduce~) + d * 2); if (self.equipment.length > 0) for (eq in self.equipment) if (eq.hastag(~mqshortfuse~)) eq.animate(~flashandshake~);} else bonus(getstatusself(~mqshortfuseused~) > 0 ? d * 200 : -1000);,Overdrive,DOUBLES|DOUBLES,,GREEN,change_power,change_power,,_cure,0,YES,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Distraction_upgraded,Short Fuse counter -<slotdoubles>|[gray](Reuseable),1,if (!simulation) {self.setvar(~mqshortfuse_reduce~[;] self.getvar(~mqshortfuse_reduce~) + d); if (self.equipment.length > 0) for (eq in self.equipment) if (eq.hastag(~mqshortfuse~)) eq.animate(~flashandshake~);} else bonus(getstatusself(~mqshortfuseused~) > 0 ? d * 100 : -1000);,Overdrive,NORMAL,,GREEN,,,,_cure,2,YES,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Distraction_downgraded,Reduce Short Fuse|counter by <slotdoubles>,1,if (!simulation) {self.setvar(~mqshortfuse_reduce~[;] self.getvar(~mqshortfuse_reduce~) + d); if (self.equipment.length > 0) for (eq in self.equipment) if (eq.hastag(~mqshortfuse~)) eq.animate(~flashandshake~);} else bonus(getstatusself(~mqshortfuseused~) > 0 ? d * 100 : -1000);,Overdrive,DOUBLES|DOUBLES,,GREEN,,,,_cure,0,YES,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Evil Contraption,Lock [lock]2 dice,1,inflict(LOCK[;] 2);,Lockdown,COUNTDOWN,14,PURPLE,twothirdcountdown,change_power,,_lock,0,NO,NO,,,,,,,,,,,,,
Evil Contraption_downgraded,Lock [lock]1 dice,1,inflict(LOCK[;] 1);,Lockdown,COUNTDOWN,14,PURPLE,,,,_lock,0,NO,NO,,,,,,,,,,,,,
Jester's Gesture,Activate all|equipment for free,2,if (self.equipment.length > 0) for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.availablethisturn) runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]);,Free For All,COUNTDOWN,24,ORANGE,threequartercountdown,change_power,,jester_snap,0,YES,NO,,,,,,,,,,,,,
Jester's Gesture_downgraded,Activate one random|equipment for free,2,var alleq = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.availablethisturn) alleq.push(eq); alleq = shuffle(alleq); var c = 1; while (alleq.length > 0 && c > 0) {var eq = alleq.pop(); runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]); c--;},Free For All,COUNTDOWN,24,ORANGE,,,,jester_snap,0,YES,NO,,,,,,,,,,,,,
Combat Roll@mqwarrior_vampireslayer,Reroll a dice|[gray](Reuseable),1,givedice();,Random Roll,NORMAL,,GRAY,,,,none,3,YES,NO,skillcard|excludefromrandomlists|cannotsteal|mqwarrior_vampireslayer|curseavoid,,,,,,,,,,,,
Combat Stake@mqwarrior_vampireslayer,Takes final [heart]5 hp|from vampires,1,if (target.hp <= 5 && getstatus(VAMPIRE) > 0) {removestatus(VAMPIRE[;] ALL); attack(target.hp); sfxdamage(target[;] target.hp);} else {attack(5); sfxdamage(target[;] 5); target.textparticle(~No effect!~);},Broken Gadget,COUNTDOWN,40,GRAY,,,,none,0,NO,NO,skillcard|excludefromrandomlists|cannotsteal|mqwarrior_vampireslayer|curseavoid,,,,,,,,,,,,
@mqwarrior_vampireslayerkit,(special),2,,Broken Gadget,,,GRAY,,,,none,0,NO,YES,skillcard|excludefromrandomlists|cannotsteal,,e.usedthisbattle = true; var eq = new elements.Equipment(~Combat Roll@mqwarrior_vampireslayer~); eq.equippedby = self; self.equipment.push(eq); eq = new elements.Equipment(~Combat Stake@mqwarrior_vampireslayer~); eq.equippedby = self; var c = eq.maxcountdown - eq.maxcountdown / 5 * self.dice; eq.maxcountdown -= c; eq.remainingcountdown -= c; eq.countdown -= c; self.equipment.push(eq);,if (self.equipment.length > 0) for (eq in self.equipment.copy()) {if (eq.hastag(~mqwarrior_vampireslayer~)) self.equipment.remove(eq);},,,,,,,,,
Thornstaff,Do [sword]6 damage|Gain [thorns]2 thorns,2,attack(6); sfxdamage(target[;] 6); inflictself(THORNS[;] 2);,Plasma Gun,COUNTDOWN,8,GREEN,change_power,change_power,,_thorns,0,NO,NO,,,,,,,,,,,,,
Thornstaff_upgraded,Do [sword]8 damage|Gain [thorns]2 thorns,2,attack(8); sfxdamage(target[;] 8); inflictself(THORNS[;] 2);,Plasma Gun,COUNTDOWN,8,GREEN,,,,_thorns,0,NO,NO,,,,,,,,,,,,,
Thornstaff_downgraded,Do [sword]3 damage|Gain [thorns]1 thorns,2,attack(3); sfxdamage(target[;] 3); inflictself(THORNS);,Plasma Gun,COUNTDOWN,8,GREEN,,,,_thorns,0,NO,NO,,,,,,,,,,,,,
Hired Blade,Do [sword]<d6> damage|Triple every 3 uses,2,var dmg = d; if ((e.timesused % 3) == 0) dmg *= 3; attack(d); sfxdamage(target[;] d);,Plasma Gun,MAX4,,BRIGHTCYAN,simplify,decreaserange,,_metals,0,NO,NO,,,,,,,,,,,,,
Disc Room,Do [sword]5 damage to random|targets 5 times,2,for (i in 0...5) {var odds = 50; if (getstatusself(~luck~) > 0) odds += 50 * getstatusself(~luck~); if (getstatusself(~luck+~) > 0) odds = 100; var to_me = !chance(odds); if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {var to_me = args[0]; var eq = runscript(~megaquest/createequipment~[;] [~~[;] false[;] false[;] 3180 / 8 * runscript(~megaquest/math/random~[;] [1[;] 6])[;] to_me ? -618 : 2180 + 618[;] self[;] true]); eq.displayname = ~Disc~; eq.fulldescription = to_me ? ~Do [sword]<d6> damage~ : ~Take [sword]<d6> damage~; eq.script = to_me ? ~attackself(d); sfxdamage(self[;] d);~ : ~attack(d); sfxdamage(target[;] d);~; eq.script += ~sfx(\~_metals\~[;] \~\~[;] 0.2);~; eq.castdirection = to_me ? -1 : 1; eq.changeslots([~REQUIRE5~]); runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]);}[;] i * 0.5[;] to_me]); else {if (to_me) attackself(5); else attack(5);}},Plasma Gun,COUNTDOWN,12,GRAY,change_power,change_power,,_cure,0,NO,NO,,,,,,,,,,,,,
Disc Room_upgraded,Do [sword]5 damage to random|targets 10 times,2,for (i in 0...10) {var odds = 50; if (getstatusself(~luck~) > 0) odds += 50 * getstatusself(~luck~); if (getstatusself(~luck+~) > 0) odds = 100; var to_me = !chance(odds); if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {var to_me = args[0]; var eq = runscript(~megaquest/createequipment~[;] [~~[;] false[;] false[;] 3180 / 8 * runscript(~megaquest/math/random~[;] [1[;] 6])[;] to_me ? -618 : 2180 + 618[;] self[;] true]); eq.displayname = ~Disc~; eq.fulldescription = to_me ? ~Do [sword]<d6> damage~ : ~Take [sword]<d6> damage~; eq.script = to_me ? ~attackself(d); sfxdamage(self[;] d);~ : ~attack(d); sfxdamage(target[;] d);~; eq.script += ~sfx(\~_metals\~[;] \~\~[;] 0.2);~; eq.castdirection = to_me ? -1 : 1; eq.changeslots([~REQUIRE5~]); runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]);}[;] i * 0.5[;] to_me]); else {if (to_me) attackself(5); else attack(5);}},Plasma Gun,COUNTDOWN,12,GRAY,,,,_cure,0,NO,NO,,,,,,,,,,,,,
Disc Room_downgraded,Do [sword]5 damage to random|targets 3 times,2,for (i in 0...3) {var odds = 50; if (getstatusself(~luck~) > 0) odds += 50 * getstatusself(~luck~); if (getstatusself(~luck+~) > 0) odds = 100; var to_me = !chance(odds); if (!simulation) runscript(~megaquest/delaycall~[;] [function (args) {var to_me = args[0]; var eq = runscript(~megaquest/createequipment~[;] [~~[;] false[;] false[;] 3180 / 8 * runscript(~megaquest/math/random~[;] [1[;] 6])[;] to_me ? -618 : 2180 + 618[;] self[;] true]); eq.displayname = ~Disc~; eq.fulldescription = to_me ? ~Do [sword]<d6> damage~ : ~Take [sword]<d6> damage~; eq.script = to_me ? ~attackself(d); sfxdamage(self[;] d);~ : ~attack(d); sfxdamage(target[;] d);~; eq.script += ~sfx(\~_metals\~[;] \~\~[;] 0.2);~; eq.castdirection = to_me ? -1 : 1; eq.changeslots([~REQUIRE5~]); runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] false]);}[;] i * 0.5[;] to_me]); else {if (to_me) attackself(5); else attack(5);}},Plasma Gun,COUNTDOWN,12,GRAY,,,,_cure,0,NO,NO,,,,,,,,,,,,,
Dramatic Chainsaw,Do [sword]<double> damage[;] can|only use on first turn,2,attack(d * 2); sfxdamage(target[;] d * 2);,Catapult,EVEN|EVEN,,RED,simplify,complicate,,_metals,0,NO,NO,,,,,if (turn > 1) {e.availablethisturn = false; e.unavailabletext = e.displayname + e.namemodifier; e.unavailabledetails = [~Unavailable (Not Turn 1)~];},,,,,,,,
Infinity Mirror Prism,Take an extra turn|+1 dice this fight|[gray](once per battle),2,inflictself(EXTRATURN); if (!simulation) self.extradice++; else bonus(1000);,Infinity Mirror,COUNTDOWN,20,BRIGHTCYAN,threequartercountdown,change_power,,magic_gaindice,0,YES,YES,,,,,,,,,,,,,
Infinity Mirror Prism_downgraded,+1 dice this fight|[gray](once per battle),2,if (!simulation) self.extradice++; else bonus(1000);,Infinity Mirror,COUNTDOWN,20,BRIGHTCYAN,,,,magic_gaindice,0,YES,YES,,,,,,,,,,,,,
Stellate,+2 to dice value,2,givedice(d + 2);,Megabump,NORMAL,,GREEN,change_power,change_power,,none,0,YES,NO,,,,,,,,,,,,,
Stellate_upgraded,+2 to dice value|[gray](Reuseable),2,givedice(d + 2);,Megabump,NORMAL,,GREEN,,,,none,2,YES,NO,,,,,,,,,,,,,
Stellate_downgraded,+1 to dice value,2,givedice(d + 1);,Megabump,NORMAL,,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Polyhedron,Do [sword]8 damage|Randomize countdown,2,attack(8); sfxdamage(target[;] 8); if (!simulation) {e.countdown = runscript(~megaquest/math/random~[;] [8[;] 20]); e.maxcountdown = e.countdown;},Catapult,COUNTDOWN,10,YELLOW,change_power,change_power,,none,0,NO,NO,,,,,,,,,,,,,
Polyhedron_upgraded,Do [sword]10 damage|Randomize countdown,2,attack(10); sfxdamage(target[;] 10); if (!simulation) {e.countdown = runscript(~megaquest/math/random~[;] [8[;] 20]); e.maxcountdown = e.countdown;},Catapult,COUNTDOWN,10,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Polyhedron_downgraded,Do [sword]4 damage|Randomize countdown,2,attack(4); sfxdamage(target[;] 4); if (!simulation) {e.countdown = runscript(~megaquest/math/random~[;] [8[;] 20]); e.maxcountdown = e.countdown;},Catapult,COUNTDOWN,10,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Tree@mqbiggerswords,Takes final [heart]5 hp|from vampires,2,if (target.hp <= 5 && getstatus(VAMPIRE) > 0) {removestatus(VAMPIRE[;] ALL); attack(target.hp); sfxdamage(target[;] target.hp);} else {attack(5); sfxdamage(target[;] 5); target.textparticle(~No effect!~);},Heat Ray,COUNTDOWN,40,RED,halfcountdown,noeffect,survive,none,0,NO,NO,excludefromrandomlists,,,,,,,,,,,,
Reading the Room,Get 3 enemy equipment|of your level,1,if (!simulation) {var enemyeq = []; for (enemy in getenemy(self.level[;] [self.name])) {var fighter = new elements.Fighter(enemy); if (fighter.equipment.length > 0) for (eq in fighter.equipment) enemyeq.push(eq.name); fighter.dispose();} enemyeq = shuffle(enemyeq); var c = 3; while (c > 0 && enemyeq.length > 0) {giveequipment(enemyeq.pop()); c--;} } else bonus(1000); screenshake();,Mailbox,COUNTDOWN,12,GREEN,change_power,change_power,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Reading the Room_upgraded,Get 3 enemy upgraded|equipment of your level,1,if (!simulation) {var enemyeq = []; for (enemy in getenemy(self.level[;] [self.name])) {var fighter = new elements.Fighter(enemy); if (fighter.equipment.length > 0) for (eq in fighter.equipment) enemyeq.push(eq.name); fighter.dispose();} enemyeq = shuffle(enemyeq); var c = 3; while (c > 0 && enemyeq.length > 0) {giveequipment(enemyeq.pop() + ~+~); c--;} } else bonus(1000); screenshake();,Mailbox,COUNTDOWN,12,GREEN,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Reading the Room_downgraded,Get one random enemy|equipment of your level,1,if (!simulation) {var enemyeq = []; for (enemy in getenemy(self.level[;] [self.name])) {var fighter = new elements.Fighter(enemy); if (fighter.equipment.length > 0) for (eq in fighter.equipment) enemyeq.push(eq.name); fighter.dispose();} enemyeq = shuffle(enemyeq); var c = 1; while (c > 0 && enemyeq.length > 0) {giveequipment(enemyeq.pop()); c--;} } else bonus(1000); screenshake();,Mailbox,COUNTDOWN,12,GREEN,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Star Map,Gain a random blessing|Inflict 2x random status,2,if (!simulation) {runscript(~megaquest/delaycall~[;] [function (args) {new elements.Skill(~Power Up~).execute(args[0][;] args[1]);}[;] 1 / 60[;] self[;] target]); var st = rand(loadtext(~megaquest/glitterbomb~)); inflict(st[;] 2); sfx(~_~ + st.toLowerCase()[;] ~~[;] 0.2);} else bonus(2000);,Glitter Bomb,REQUIRE6,,YELLOW,simplify,doublerequirements,,none,0,NO,NO,,,,,,,,,,,,,
Dragon Chaser,[fire]8 dmg + [fire]2 burn|Take [sword]4 if unused,2,attack(8[;] FIRE); sfxdamage(target[;] 8); inflict(FIRE[;] 2); if (!simulation) e.setvar(~dragon_chased~[;] 1); else bonus(5000);,Hellfire,COUNTDOWN,16,RED,threequartercountdown,change_power,,_fire,0,NO,NO,,,,,,,,,if (e.getvar(~dragon_chased~) == 0) {attackself(4); sfxdamage(self[;] 4);} e.setvar(~dragon_chased~[;] 0);,,,,
Dragon Chaser_downgraded,[fire]4 dmg + [fire]1 burn|Take [sword]4 if unused,2,attack(4[;] FIRE); sfxdamage(target[;] 4); inflict(FIRE[;] 1); if (!simulation) e.setvar(~dragon_chased~[;] 1); else bonus(5000);,Hellfire,COUNTDOWN,16,RED,,,,_fire,0,NO,NO,,,,,,,,,if (e.getvar(~dragon_chased~) == 0) {attackself(4); sfxdamage(self[;] 4);} e.setvar(~dragon_chased~[;] 0);,,,,
Hydroponics Bot,Recover [heal]2 HP for each|your or enemy blue equipment,1,var healcount = 0; if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 2; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 2;} else healcount = 2; attackself(-healcount);,Regenerate,ODD,,GREEN,change_power,change_power,,_heal,0,YES,NO,,,,,,,,,,,,,
Hydroponics Bot_upgraded,Recover [heal]3 HP for each|your or enemy blue equipment,1,var healcount = 0; if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 3; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 2;} else healcount = 2; attackself(-healcount);,Regenerate,ODD,,BRIGHTCYAN,,,,_heal,0,YES,NO,,,,,,,,,,,,,
Hydroponics Bot_downgraded,Recover [heal]1 HP for each|your or enemy blue equipment,1,var healcount = 0; if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 1; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && eq.equipmentcol == 8) healcount += 1;} else healcount = 1; attackself(-healcount);,Regenerate,ODD,,GREEN,,,,_heal,0,YES,NO,,,,,,,,,,,,,
Throwing Javelin,In [jinx]2 turns[;]|do [sword]<d6> damage,2,jinx(~Throwing_Javelin~[;] ~take [sword]%VAR% damage~[;] ~Take [sword]%VAR% damage~[;] ~attack(%VAR%); sfxdamage(target[;] %VAR%);~[;] target[;] self[;] 2[;] d);,Megabump,NORMAL|FREE2,,PINK,change_power,change_power,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Throwing Javelin_upgraded,In [jinx]2 turns[;]|do [sword]<d6> damage,2,jinx(~Throwing_Javelin+~[;] ~take [sword]%VAR% damage~[;] ~Take [sword]%VAR% damage~[;] ~attack(%VAR%); sfxdamage(target[;] %VAR%);~[;] target[;] self[;] 2[;] d);,Megabump,NORMAL|FREE3,,PINK,,,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Throwing Javelin_downgraded,In [jinx]3 turns[;]|do [sword]<d6> damage,2,jinx(~Throwing_Javelin-~[;] ~take [sword]%VAR% damage~[;] ~Take [sword]%VAR% damage~[;] ~attack(%VAR%); sfxdamage(target[;] %VAR%);~[;] target[;] self[;] 3[;] d);,Megabump,NORMAL|FREE2,,PINK,,,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Ghost House,Do [sword]1. If this is the final|blow[;] use current enemy|equipment on next enemy,1,attack(1); sfxdamage(target[;] 1); if (target.hp <= 0) {if (!simulation) {var c = 0; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && !eq.hastag(~cannotsteal~)) {self.setvar(~mqghosthouse~ + c[;] eq.name + eq.namemodifier); c++;} self.setvar(~mqghosthouse~[;] 1);} else bonus(1000);},Reversal,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,_curse,0,NO,NO,,,,,,,,,,,,,
Ghost House_upgraded,Do [sword]1. If this is the final|blow[;] use current enemy|equipment on next enemy,1,attack(1); sfxdamage(target[;] 1); if (target.hp <= 0) {if (!simulation) {var c = 0; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && !eq.hastag(~cannotsteal~)) {self.setvar(~mqghosthouse~ + c[;] eq.name + eq.namemodifier); c++;} self.setvar(~mqghosthouse~[;] 1);} else bonus(1000);},Reversal,EVEN,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Ghost House_downgraded,Do [sword]1. If this is the final|blow[;] use current enemy|equipment on next enemy,1,attack(1); sfxdamage(target[;] 1); if (target.hp <= 0) {if (!simulation) {var c = 0; if (target.equipment.length > 0) for (eq in target.equipment) if (!eq.hastag(~skillcard~) && !eq.hastag(~cannotsteal~)) {self.setvar(~mqghosthouse~ + c[;] eq.name + eq.namemodifier); c++;} self.setvar(~mqghosthouse~[;] 1);} else bonus(1000);},Reversal,REQUIRE6|REQUIRE6,,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,,
Dark Tides,Freeze [ice]1 dice|Curse enemy,1,inflict(ICE); sfx(~_ice~); inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);,Cackle,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,none,0,NO,NO,,,,,,,,,,,,,
Dark Tides_upgraded,Freeze [ice]2 dice|Curse enemy,1,inflict(ICE[;] 2); sfx(~_ice~); inflict(CURSE); sfx(~_curse~[;] ~~[;] 0.2);,Cackle,DOUBLES|DOUBLES,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Dark Tides_downgraded,Freeze [ice]1 dice,1,inflict(ICE); sfx(~_ice~);,Cackle,DOUBLES|DOUBLES,,PURPLE,,,,none,0,NO,NO,,,,,,,,,,,,,
Sleep Paralysis,Inflict [curse]Fear,2,inflict(~mqfear~);,Cackle,EVEN,,PURPLE,simplify,doublerequirements,,_curse,0,NO,NO,excludefromrandomlists|cannotsteal|cannotreuse,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Hallucinate,+<timesused> to enemy statuses|+1 on each use,2,if (!simulation) {if (target.status.length > 0) for (st in target.status.copy()) if (!st.invisible) inflict(st.type[;] e.timesused + 1);} else bonus(getstatus(ALL) * 100);,Overload,COUNTDOWN,12,PURPLE,halfcountdown,change_power,,_curse,0,NO,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Hallucinate_downgraded,+1 to enemy statuses,2,if (!simulation) {if (target.status.length > 0) for (st in target.status.copy()) if (!st.invisible) inflict(st.type[;] 1);} else bonus(getstatus(ALL) * 100);,Overload,COUNTDOWN,12,PURPLE,,,,_curse,0,NO,NO,,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;,
Paper Craft,Fold dice in half,1,var v = d; if (d == 4) v = 2; if (d == 5 # d == 6) v = 3; givedice(v);,Magic Lockpick,MIN4,,GREEN,change_power,change_power,,none,0,YES,NO,,,,,,,,,,delay(1.0);,,,
Paper Craft_upgraded,Fold dice in half|[gray](Reuseable),1,var v = d; if (d == 4) v = 2; if (d == 5 # d == 6) v = 3; givedice(v);,Magic Lockpick,MIN4,,GREEN,,,,none,-1,YES,NO,,,,,,,,,,delay(1.0);,,,
Paper Craft_downgraded,Fold dice in half|twice,1,var v = d; if (d == 2 # d == 4) v = 1; if (d == 3 # d == 5 # d == 6) v = 2; givedice(v);,Magic Lockpick,MIN4,,GREEN,,,,none,0,YES,NO,,,,,,,,,,delay(1.0);,,,
Overcome,Put exact dice value|to get rid of [curse]Fear,2,var total = -e.countdown; if (e.dicehistory.length > 0) for (mydice in e.dicehistory) total += mydice.basevalue; var newdice = []; while (total > 0) {var v = 6; if (v > total) v = total; total -= v; newdice.push(v);} var availdice = false; if (self.dicepool.length > 0) for (mydice in self.dicepool) if (mydice.available()) availdice = true; if (newdice.length > 0 # availdice) {if (newdice.length) givedice(newdice); sfx(~roboterror~);} else {inflictself(EXTRATURN); sfx(~_dodge~); removestatusself(~mqfear~[;] ALL);},Overdrive,COUNTDOWN,99,GRAY,,,,none,0,YES,NO,excludefromrandomlists|cannotsteal,,,,,,if (e.countdown == 0 && e.ready) {var davail = false; if (self.dicepool.length > 0) for (mydice in self.dicepool()) if (mydice.available()) davail = true; if (!davail) runscript(~megaquest/snap~[;] [eq[;] self[;] target[;] true]);},,,,,,
Trashcannon,Discharge [poison]<evar:trashcannon_charge> poison|(Charge [poison]1 on countdown),2,var b = 3; if (!simulation) {b = e.getvar(~trashcannon_charge~); e.setvar(~trashcannon_charge~[;] 0);} inflict(POISON[;] b); sfx(~_poison~);,Poison Arrow,COUNTDOWN,6,PURPLE,change_power,change_power,,_plasma,0,NO,NO,,,,,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~trashcannon~)) {e.setvar(~trashcannon_charge~[;] e.getvar(~trashcannon_charge~) + 1);} e.setvar(~trashcannon~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~trashcannon~[;] e.remainingcountdown);,,,,
Trashcannon_upgraded,Discharge [poison]<evar:trashcannon_charge> poison|(Charge [poison]1 on countdown),2,var b = 3; if (!simulation) {b = e.getvar(~trashcannon_charge~); e.setvar(~trashcannon_charge~[;] 0);} inflict(POISON[;] b); sfx(~_poison~);,Poison Arrow,COUNTDOWN,16,PURPLE,,,,_plasma,0,NO,NO,,,,,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~trashcannon~)) {e.setvar(~trashcannon_charge~[;] e.getvar(~trashcannon_charge~) + 1);} e.setvar(~trashcannon~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~trashcannon~[;] e.remainingcountdown);,,,,
Trashcannon_downgraded,Inflict [poison]2 poison|Lose all charge,2,if (!simulation) e.setvar(~trashcannon_charge~[;] 0); inflict(POISON[;] 2); sfx(~_poison~);,Poison Arrow,COUNTDOWN,6,PURPLE,,,,_plasma,0,NO,NO,,,,,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,e.setvar(~trashcannon~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~trashcannon~)) {e.setvar(~trashcannon_charge~[;] e.getvar(~trashcannon_charge~) + 1);} e.setvar(~trashcannon~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~trashcannon~[;] e.remainingcountdown);,,,,
Aero Retry,Inflict [shock]1 shock|+1 dice next turn,1,inflict(SHOCK); if (!simulation) self.bonusdice++; else bonus(1000);,Magic Dice,REQUIRE4,,YELLOW,change_power,change_power,,_shock,0,NO,NO,,,,,,,,,,,,,
Aero Retry_upgraded,Inflict [shock]3 shock|+1 dice next turn,1,inflict(SHOCK[;] 3); if (!simulation) self.bonusdice++; else bonus(1000);,Magic Dice,REQUIRE4,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Aero Retry_downgraded,Inflict [shock]1 shock,1,inflict(SHOCK);,Magic Dice,REQUIRE4,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Pillow Headset,Do [sword]3 damage|[sword]<triple> against Loud Bird,1,var dmg = 3; if (!simulation && target.name == ~Loud Bird~) dmg = d * 3; attack(dmg); sfxdamage(target[;] dmg);,Pea Gun,EVEN,,YELLOW,add2,change_power,,none,0,NO,NO,,1,,,,,,,,,,,
Pillow Headset_downgraded,Do [sword]3 damage|[sword]<double> against Loud Bird,1,var dmg = 3; if (!simulation && target.name == ~Loud Bird~) dmg = d * 2; attack(dmg); sfxdamage(target[;] dmg);,Pea Gun,EVEN,,YELLOW,,,,none,0,NO,NO,,,,,,,,,,,,,
Sixth Sense,Dodge next attack|Roll a six,2,inflictself(DODGE); givedice(6);,Magic Six,COUNTDOWN,18,YELLOW,twothirdcountdown,change_power,,_shock,0,YES,NO,,,,,,,,,,,,,
Sixth Sense_downgraded,Dodge next attack|Get a new dice,2,inflictself(DODGE); givedice();,Magic Six,COUNTDOWN,18,YELLOW,,,,_shock,0,YES,NO,,,,,,,,,,,,,
Shield Wash,Double [shield]shield,1,inflictself(SHIELD[;] getstatusself(SHIELD));,Magic Dice,REQUIRE1|REQUIRE1,,ORANGE,change_power,change_power,,openchest,0,YES,NO,,,,,,,,,,,,,
Shield Wash_upgraded,Triple [shield]shield,1,inflictself(SHIELD[;] getstatusself(SHIELD) * 2);,Magic Dice,REQUIRE1|REQUIRE1,,ORANGE,,,,openchest,0,YES,NO,,,,,,,,,,,,,
Shield Wash_downgraded,Add [shield]3 shield,1,inflictself(SHIELD[;] 3);,Magic Dice,REQUIRE1|REQUIRE1,,ORANGE,,,,openchest,0,YES,NO,,,,,,,,,,,,,
Infuriating Note,Yoinked!|Signed[;] Bounty Hunter,2,,Fury,,,BLACK,change_power,change_power,,none,0,YES,NO,weakenavoid|weakenimmune|excludefromrandomlists,,inflictself(FURY); e.animate(~flashandshake~); sfx(~_fury~);,,,,,,,,,,
Infuriating Note_upgraded,Yoinked!|Signed[;] Bounty Hunter,2,,Fury,,,BLACK,,,,none,0,YES,NO,weakenavoid|weakenimmune|excludefromrandomlists,,inflictself(FURY[;] 2); e.animate(~flashandshake~); sfx(~_fury~);,,,,,,,,,,
Poisonous Spike,Inflict [poison]2 poison,1,inflict(POISON[;] 2);,Poison Arrow,COUNTDOWN,6,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Poisonous Spike_upgraded,Inflict [poison]2 poison,1,inflict(POISON[;] 2);,Poison Arrow,COUNTDOWN,4,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Poisonous Spike_downgraded,Inflict [poison]1 poison,1,inflict(POISON);,Poison Arrow,COUNTDOWN,6,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Piercing Spike,Lock [lock]1 dice,1,inflict(LOCK);,Lockdown,COUNTDOWN,6,PURPLE,change_power,change_power,,_lock,0,NO,NO,,,,,,,,,,,,,
Piercing Spike_upgraded,Lock [lock]1 dice,1,inflict(LOCK);,Lockdown,COUNTDOWN,4,PURPLE,,,,_lock,0,NO,NO,,,,,,,,,,,,,
Piercing Spike_downgraded,Inflict [shock]1 shock,1,inflict(SHOCK);,Lockdown,COUNTDOWN,6,PURPLE,,,,_lock,0,NO,NO,,,,,,,,,,,,,
Piece of Eight,Roll a four,1,givedice(4); if (d == 4) bonus(-1000);,Megabump,EVEN,,GREEN,simplify,change_power,,none,0,YES,NO,,,,,,,,,,,,,
Piece of Eight_downgraded,Roll two dice that|add up to 4,1,givedice(split(4));,Megabump,EVEN,,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Manhole Throw,Inflict [weaken]3 weaken|([shield]2 shield on countdown),2,inflict(WEAKEN[;] 3);,Dial Up Sounds,COUNTDOWN,16,ORANGE,change_power,change_power,,_weaken,0,NO,NO,,,,,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~manhole_throw~)) {inflictself(SHIELD[;] 2); sfx(~_shield~); e.animate(~flashandshake~);} e.setvar(~manhole_throw~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,,,,
Manhole Throw_upgraded,Inflict [weaken]3 weaken|([shield]3 shield on countdown),2,inflict(WEAKEN[;] 3);,Dial Up Sounds,COUNTDOWN,16,ORANGE,,,,_weaken,0,NO,NO,,,,,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~manhole_throw~)) {inflictself(SHIELD[;] 3); sfx(~_shield~); e.animate(~flashandshake~);} e.setvar(~manhole_throw~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,,,,
Manhole Throw_downgraded,Inflict [weaken]3 weaken|([shield]1 shield on countdown),2,inflict(WEAKEN[;] 3);,Dial Up Sounds,COUNTDOWN,16,ORANGE,,,,_weaken,0,NO,NO,,,,,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,runscript(~megaquest/delaycall~[;] [function (args) {if (e.remainingcountdown < e.getvar(~manhole_throw~)) {inflictself(SHIELD[;] 1); sfx(~_shield~); e.animate(~flashandshake~);} e.setvar(~manhole_throw~[;] e.remainingcountdown);}[;] 0]);,e.setvar(~manhole_throw~[;] e.remainingcountdown);,,,,
Juggernaut,Do [sword]2x<d6> damage|to you and the enemy,2,if (simulation # e.getvar(~juggernaut_flip_target~) == 0) {attack(d); sfxdamage(target[;] d);} else {attackself(d); sfxdamage(self[;] d);} if (!simulation) {e.setvar(~juggernaut_flip_target~[;] e.getvar(~juggernaut_flip_target~) == 0 ? 1 : 0); if (e.getvar(~juggernaut_first_use~) == 0) {e.setvar(~juggernaut_first_use~[;] 1); e.setvar(~juggernaut_extrauses~[;] 3);} if (e.getvar(~juggernaut_extrauses~) > 0) {e.setvar(~juggernaut_extrauses~[;] e.getvar(~juggernaut_extrauses~) - 1); e.castdirection = e.getvar(~juggernaut_flip_target~) == 0 ? 1 : -1; e.show = true; e.showassigneddice(); runscript(~megaquest/snap~[;] [e[;] self[;] target[;] false]); }},Plasma Gun,NORMAL,,RED,add1,complicate,,none,0,NO,NO,,,,,e.castdirection = 1; e.setvar(~juggernaut_flip_target~[;] 0); e.setvar(~juggernaut_extrauses~[;] 0); e.setvar(~juggernaut_first_use~[;] 0);,,,,,,,,
Wicker Hug,Make the enemy weak|to [fire]fire damage,1,if (getstatus(~mqweakfire~) <= 0) inflict(~mqweakfire~);,Megabump,EVEN,,RED,simplify,complicate,,_fire,0,NO,NO,,,,,,,,,,,,,
Weave Back,Recover [heal]12[][;] -2 to count|on any equipment use,2,attackself(-12);,Regenerate,COUNTDOWN,24,GREEN,threequartercountdown,change_power,,_heal,0,YES,NO,,,,,,,runscript(~megaquest/reducecountdown~[;] [e[;] 2]);,,,,,,
Weave Back_downgraded,Recover [heal]6[][;] -2 to count|on any equipment use,2,attackself(-6);,Regenerate,COUNTDOWN,24,GREEN,,,,_heal,0,YES,NO,,,,,,,runscript(~megaquest/reducecountdown~[;] [e[;] 2]);,,,,,,
Tactical Scope,Duplicate input dice,2,var newdice = []; if (actualdice.length > 0) for (i in 0...2) for (mydice in actualdice) newdice.push(mydice.basevalue); if (newdice.length > 0) givedice(newdice);,Clone Device,NORMAL|NORMAL,8,GREEN,reducesize,change_power,,none,0,YES,NO,,,,,,,,,,,,,
Tactical Scope_downgraded,Duplicate one dice[;]|return the other,2,var newdice = []; if (actualdice.length > 0) {var mydice = rand(actualdice); newdice.push(mydice.basevalue);} if (newdice.length > 0) givedice(newdice);,Clone Device,NORMAL|NORMAL,8,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Tactical Scope_weakened,Duplicate one dice[;]|return the other,1,var newdice = []; if (actualdice.length > 0) {var mydice = rand(actualdice); newdice.push(mydice.basevalue);} if (newdice.length > 0) givedice(newdice);,Clone Device,NORMAL|NORMAL,8,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Tactical Scope_deckupgrade,Triplicate input dice,2,var newdice = []; if (actualdice.length > 0) for (i in 0...3) for (mydice in actualdice) newdice.push(mydice.basevalue); if (newdice.length > 0) givedice(newdice);,Clone Device,NORMAL|NORMAL,8,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Misfortune Cookie@6,Covered in webs,1,giveequipment(~Misfortune Cookie@5~[;] true[;] false[;] e);,Cackle,REQUIRE6,,PURPLE,change_power,doublerequirements,,_curse,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@6_upgraded,Covered in sugar,1,giveequipment(~Misfortune Cookie@5+~[;] true[;] false[;] e);,Cackle,REQUIRE6,,ORANGE,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@5,Doesn't look|appetizing,1,giveequipment(~Misfortune Cookie@4~[;] true[;] false[;] e);,Cackle,REQUIRE5,,PURPLE,change_power,doublerequirements,,_curse,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@5_upgraded,Looks a bit|tasty,1,giveequipment(~Misfortune Cookie@4+~[;] true[;] false[;] e);,Cackle,REQUIRE5,,ORANGE,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@4,You try to break it[;]|but to no avail,1,giveequipment(~Misfortune Cookie@3~[;] true[;] false[;] e);,Cackle,REQUIRE4,,PURPLE,change_power,doublerequirements,,_curse,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@4_upgraded,You try to break it.|It cracks a little!,1,giveequipment(~Misfortune Cookie@3+~[;] true[;] false[;] e);,Cackle,REQUIRE4,,ORANGE,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@3,Something tells you|that it's a bad idea,1,giveequipment(~Misfortune Cookie@2~[;] true[;] false[;] e);,Cackle,REQUIRE3,,PURPLE,change_power,doublerequirements,,_curse,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@3_upgraded,You smell a|mouth-watering smell,1,giveequipment(~Misfortune Cookie@2+~[;] true[;] false[;] e);,Cackle,REQUIRE3,,ORANGE,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@2,But you keep on|trying anyway,1,giveequipment(~Misfortune Cookie@1~[;] true[;] false[;] e);,Cackle,REQUIRE2,,PURPLE,change_power,doublerequirements,,openchest,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@2_upgraded,You try to break it|apart even harder!,1,giveequipment(~Misfortune Cookie@1+~[;] true[;] false[;] e);,Cackle,REQUIRE2,,ORANGE,,,,openchest,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@1,It cracks! Inside|you find...,1,giveequipment(~Misfortune Cookie@0~[;] true[;] false[;] e);,Cackle,REQUIRE1,,ORANGE,change_power,doublerequirements,,roboterror,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@1_upgraded,It cracks! Inside|you find...,1,giveequipment(~Inspiring Fortune@~ + rand([1[;] 2[;] 3])[;] true[;] false[;] e);,Cackle,REQUIRE1,,ORANGE,,,,useitem,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Misfortune Cookie@0,Another cookie.,1,giveequipment(~Misfortune Cookie@5~[;] true[;] false[;] e);,Cackle,REQUIRE6,,PURPLE,change_power,doublerequirements,,_curse,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@1,One day[;] you will escape|from the dungeons!,1,inflictself(DODGE);,Quick Thinking,NORMAL,,YELLOW,change_power,change_power,,_dodge,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@1_upgraded,One day[;] you will escape|from the dungeons!|(Returns dice),1,inflictself(DODGE); givedice(d);,Quick Thinking,NORMAL,,YELLOW,,,,_dodge,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@1_downgraded,You are doomed.,1,,Quick Thinking,,,BLACK,,,,_dodge,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@2,You will complete this|episode! Believe in yourself!,1,inflictself(FURY);,Fury,NORMAL,,RED,change_power,change_power,,_fury,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@2_upgraded,You will complete this|episode! Believe in yourself!|(Returns dice),1,inflictself(FURY); givedice(d);,Fury,NORMAL,,RED,,,,_fury,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@2_downgraded,You are doomed.,1,,Fury,,,BLACK,,,,_fury,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@3,Today[;] luck will be|on your side!,1,givedice([6[;] 6]);,Magic Six,NORMAL,,GREEN,change_power,change_power,,none,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@3_upgraded,Today[;] luck will be|on your side!|(Returns dice),1,givedice([6[;] 6[;] d]);,Magic Six,NORMAL,,GREEN,,,,none,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Inspiring Fortune@3_downgraded,You are doomed.,1,,Magic Six,,,BLACK,,,,none,0,YES,NO,excludefromrandomlists,,,,,,,,,,,,
Glass Sword,Do [sword]<double> damage|(You have 50% health),2,attack(d * 2); sfxdamage(target[;] d * 2);,Catapult,NORMAL,,BRIGHTCYAN,change_power,change_power,,_metals,0,NO,NO,excludefromrandomlists|cannotsteal,,var fraction = self.hp / self.maxhp; var maxhp = self.maxhp; self.maxhp = runscript(~megaquest/math/ceil~[;] [self.maxhp / 2]); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] maxhp - self.maxhp);,var fraction = self.hp / self.maxhp; self.maxhp += self.getvar(~mqglassword~); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] 0);,,,,,,,,,
Glass Sword_upgraded,Do [sword]<quadruple> damage|(You have 25% health),2,attack(d * 4); sfxdamage(target[;] d * 4);,Catapult,NORMAL,,BRIGHTCYAN,,,,_metals,0,NO,NO,excludefromrandomlists|cannotsteal,,var fraction = self.hp / self.maxhp; var maxhp = self.maxhp; self.maxhp = runscript(~megaquest/math/ceil~[;] [self.maxhp / 4]); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] maxhp - self.maxhp);,var fraction = self.hp / self.maxhp; self.maxhp += self.getvar(~mqglassword~); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] 0);,,,,,,,,,
Glass Sword_downgraded,Do [sword]<d6> damage|(You have 50% health),2,attack(d * 2); sfxdamage(target[;] d * 2);,Catapult,NORMAL,,BRIGHTCYAN,,,,_metals,0,NO,NO,excludefromrandomlists|cannotsteal,,var fraction = self.hp / self.maxhp; var maxhp = self.maxhp; self.maxhp = runscript(~megaquest/math/ceil~[;] [self.maxhp / 2]); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] maxhp - self.maxhp);,var fraction = self.hp / self.maxhp; self.maxhp += self.getvar(~mqglassword~); self.hp = runscript(~megaquest/math/ceil~[;] [self.maxhp * fraction]); self.setvar(~mqglassword~[;] 0);,,,,,,,,,
Building Blocks,Add [shield]shield equal to 1st|dice[;] combine dice,1,inflictself(SHIELD[;] actualdice[0].basevalue); givedice(d);,Protection,NORMAL|NORMAL,4,ORANGE,change_power,change_power,,_shield,0,NO,NO,,,,,,,,,,,,,
Building Blocks_upgraded,Add [shield]shield equal to 1st|dice[;] combine dice,1,inflictself(SHIELD[;] actualdice[0].basevalue); givedice(d);,Protection,NORMAL|NORMAL,8,ORANGE,,,,_shield,0,NO,NO,,,,,,,,,,,,,
Building Blocks_downgraded,Add [shield]shield equal to 1st|dice[;] combine dice,1,inflictself(SHIELD[;] actualdice[0].basevalue); givedice(d);,Protection,NORMAL|NORMAL,3,ORANGE,,,,_shield,0,NO,NO,,,,,,,,,,,,,
Signal Lamp,Dice are <d6> on next turn|[gray](once per battle),1,removestatusself(~mqsignallamp~[;] d); inflictself(~mqsignallamp~[;] d);,Replicate,MAX5,,GREEN,increaserange,decreaserange,,_thinghappens,0,YES,YES,,,,,,,,,,,,,
Shoulder Cannon,Do [sword]4 dmg each turn|[sword]<var:shouldercannon> left[;] use to reload,1,if (!simulation) {self.setvar(~shouldercannon~[;] self.getvar(~shouldercannon~) + 4); for (eq in self.equipment) if (eq.name == e.name) eq.animate(~flashandshake~);} else attack(4);,Replicate,COUNTDOWN,4,RED,change_power,change_power,,useitem,-1,YES,NO,hidereuseable,,,,,var dmg = runscript(~megaquest/math/min~[;] [4[;] self.getvar(~shouldercannon~)]); if (dmg > 0) {attack(dmg); sfxdamage(target[;] dmg); e.animate(~flashandshake~);} self.setvar(~shouldercannon~[;] runscript(~megaquest/math/max~[;] [self.getvar(~shouldercannon~) - 4[;] 0]));,,,,,,,
Shoulder Cannon_upgraded,Do [sword]6 dmg each turn|[sword]<var:shouldercannon> left[;] use to reload,1,if (!simulation) {self.setvar(~shouldercannon~[;] self.getvar(~shouldercannon~) + 6); for (eq in self.equipment) if (eq.name == e.name) eq.animate(~flashandshake~);} else attack(6);,Replicate,COUNTDOWN,6,RED,,,,useitem,-1,YES,NO,hidereuseable,,,,,var dmg = runscript(~megaquest/math/min~[;] [6[;] self.getvar(~shouldercannon~)]); if (dmg > 0) {attack(dmg); sfxdamage(target[;] dmg); e.animate(~flashandshake~);} self.setvar(~shouldercannon~[;] runscript(~megaquest/math/max~[;] [self.getvar(~shouldercannon~) - 6[;] 0]));,,,,,,,
Shoulder Cannon_downgraded,Do [sword]2 dmg each turn|[sword]<var:shouldercannon> left[;] use to reload,1,if (!simulation) {self.setvar(~shouldercannon~[;] self.getvar(~shouldercannon~) + 2); for (eq in self.equipment) if (eq.name == e.name) eq.animate(~flashandshake~);} else attack(2);,Replicate,COUNTDOWN,2,RED,,,,useitem,-1,YES,NO,hidereuseable,,,,,var dmg = runscript(~megaquest/math/min~[;] [2[;] self.getvar(~shouldercannon~)]); if (dmg > 0) {attack(dmg); sfxdamage(target[;] dmg); e.animate(~flashandshake~);} self.setvar(~shouldercannon~[;] runscript(~megaquest/math/max~[;] [self.getvar(~shouldercannon~) - 2[;] 0]));,,,,,,,
Night Vision,Increase dice value by|a number between 1-3,1,givedice(d + rand([1[;] 2[;] 3]));,Megabump,MAX3,,GREEN,change_power,complicate,,none,0,YES,NO,,,,,,,,,,,,,
Night Vision_upgraded,Increase dice value by|a number between 2-3,1,givedice(d + rand([2[;] 3]));,Megabump,MAX3,,GREEN,,,,none,0,YES,NO,,,,,,,,,,,,,
Moonglasses,Disable purple and|blue equipment,1,if (!simulation) {if (target.equipment.length > 0) for (eq in target.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && (eq.equipmentcol == 1 # eq.equipmentcol == 5 # eq.equipmentcol == 6 # eq.equipmentcol == 8)) {eq.availablethisturn = false; eq.availablenextturn = false; eq.unavailabletext = eq.displayname + eq.namemodifier; eq.unavailabledetails = [~Unavailable (Moonglasses)~];}} else bonus(1000);,Megabump,DOUBLES|DOUBLES,,BRIGHTCYAN,change_power,change_power,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Moonglasses_upgraded,Disable purple and|blue equipment,1,if (!simulation) {if (target.equipment.length > 0) for (eq in target.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && (eq.equipmentcol == 1 # eq.equipmentcol == 5 # eq.equipmentcol == 6 # eq.equipmentcol == 8)) {eq.availablethisturn = false; eq.unavailabletext = eq.displayname + eq.namemodifier; eq.unavailabledetails = [~Unavailable (Moonglasses)~];}} else bonus(1000);,Megabump,EVEN,,BRIGHTCYAN,,,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Moonglasses_downgraded,Disable purple and|blue equipment,1,if (!simulation) {if (target.equipment.length > 0) for (eq in target.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && (eq.equipmentcol == 1 # eq.equipmentcol == 5 # eq.equipmentcol == 6 # eq.equipmentcol == 8)) {eq.availablethisturn = false; eq.unavailabletext = eq.displayname + eq.namemodifier; eq.unavailabledetails = [~Unavailable (Moonglasses)~];}} else bonus(1000);,Megabump,REQUIRE6|REQUIRE6,,BRIGHTCYAN,,,,_thinghappens,0,NO,NO,,,,,,,,,,,,,
Hologram Projector,Roll an extra dice|Return dice,1,givedice([d[;] rand([1[;] 2[;] 3[;] 4[;] 5[;] 6])]);,Magic Dice,REQUIRE6,,BRIGHTCYAN,increaserange,change_power,,none,0,YES,NO,,,,,,,,,,,,,
Hologram Projector_downgraded,+1 dice next turn|Return dice,1,if (!simulation) self.bonusdice++; else bonus(1000); givedice(d);,Magic Dice,REQUIRE6,,BRIGHTCYAN,,,,none,0,YES,NO,,,,,,,,,,,,,
Staff of Allure,Do [sword]<var:alluregold> damage|(equal to your [gold]gold[]),2,var dmg = 1; if (!simulation) dmg = self.isplayer ? self.gold : 1; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,COUNTDOWN,8,YELLOW,halfcountdown,change_power,,_whooshweapons,0,NO,NO,,,,,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,,,
Staff of Allure_downgraded,Do [sword]2 damage,2,var dmg = 2; attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,COUNTDOWN,8,YELLOW,,,,_whooshweapons,0,NO,NO,,,,,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,self.setvar(~alluregold~[;] self.gold);,,,
Jelly Sprayer,Inflict [poison]3 poison|Lock [lock]1 dice,1,inflict(POISON[;] 3); inflict(LOCK);,Poison Arrow,NORMAL|NORMAL,7,PURPLE,change_power,change_power,,_poison,0,NO,NO,,,,,,,,,,,,,
Jelly Sprayer_upgraded,Inflict [poison]4 poison|Lock [lock]1 dice,1,inflict(POISON[;] 4); inflict(LOCK);,Poison Arrow,NORMAL|NORMAL,7,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Jelly Sprayer_downgraded,Inflict [poison]2 poison,1,inflict(POISON[;] 2);,Poison Arrow,NORMAL|NORMAL,7,PURPLE,,,,_poison,0,NO,NO,,,,,,,,,,,,,
Orange Gel,Gain Dodge in 2 turns,1,jinx(~Orange_Gel~[;] ~dodge next attack~[;] ~Dodge next attack~[;] ~inflict(DODGE); sfx(\~_dodge\~);~[;] self[;] target[;] 2[;] d);,Quick Thinking,COUNTDOWN,12,ORANGE,halfcountdown,change_power,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Orange Gel_downgraded,Gain Dodge in 4 turns,1,jinx(~Orange_Gel-~[;] ~dodge next attack~[;] ~Dodge next attack~[;] ~inflict(DODGE); sfx(\~_dodge\~);~[;] self[;] target[;] 4[;] d);,Quick Thinking,COUNTDOWN,12,ORANGE,,,,_thinghappens,0,YES,NO,,,,,,,,,,,,,
Spring Boots,Each dice gets|+3 or -3 to value,1,if (!simulation) {var alldice = []; for (mydice in self.dicepool) if (mydice.available()) alldice.push(mydice); if (alldice.length > 0) for (i in 0...alldice.length) runscript(~megaquest/delaycall~[;] [function (args) {var mydice = args[1]; if (args[0]) {mydice.basevalue += 3; if (mydice.basevalue > 6) mydice.basevalue = 6; new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y - args[3]}).move(); mydice.animate(~flashshake~); args[2](~useitem~); } else {new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y + args[3]}).move(); mydice.basevalue -= 3; if (mydice.basevalue <= 0) {mydice.animate(~disappear~); mydice.basevalue = 1;} else mydice.animate(~flashshake~); args[2](~roboterror~);}}[;] 1.0 * (i / alldice.length)[;] chance(50)[;] alldice[i][;] sfx[;] runscript(~megaquest/math/random~[;] [60[;] 120])]);} else bonus(1000);,Random Roll,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,none,0,YES,NO,,,,,,,,,,delay(1.0);,,,
Spring Boots_upgraded,Each dice gets|+3 or -3 to value,1,if (!simulation) {var alldice = []; for (mydice in self.dicepool) if (mydice.available()) alldice.push(mydice); if (alldice.length > 0) for (i in 0...alldice.length) runscript(~megaquest/delaycall~[;] [function (args) {var mydice = args[1]; if (args[0]) {mydice.basevalue += 3; if (mydice.basevalue > 6) mydice.basevalue = 6; new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y - args[3]}).move(); mydice.animate(~flashshake~); args[2](~useitem~); } else {new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y + args[3]}).move(); mydice.basevalue -= 3; if (mydice.basevalue <= 0) {mydice.animate(~disappear~); mydice.basevalue = 1;} else mydice.animate(~flashshake~); args[2](~roboterror~);}}[;] 1.0 * (i / alldice.length)[;] chance(50)[;] alldice[i][;] sfx[;] runscript(~megaquest/math/random~[;] [60[;] 120])]);} else bonus(1000);,Random Roll,EVEN,,PURPLE,,,,none,0,YES,NO,,,,,,,,,,delay(1.0);,,,
Spring Boots_downgraded,Each dice gets|+3 or -3 to value,1,if (!simulation) {var alldice = []; for (mydice in self.dicepool) if (mydice.available()) alldice.push(mydice); if (alldice.length > 0) for (i in 0...alldice.length) runscript(~megaquest/delaycall~[;] [function (args) {var mydice = args[1]; if (args[0]) {mydice.basevalue += 3; if (mydice.basevalue > 6) mydice.basevalue = 6; new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y - args[3]}).move(); mydice.animate(~flashshake~); args[2](~useitem~); } else {new motion.actuators.SimpleActuator(mydice[;] 0.2[;] {y: mydice.y + args[3]}).move(); mydice.basevalue -= 3; if (mydice.basevalue <= 0) {mydice.animate(~disappear~); mydice.basevalue = 1;} else mydice.animate(~flashshake~); args[2](~roboterror~);}}[;] 1.0 * (i / alldice.length)[;] chance(50)[;] alldice[i][;] sfx[;] runscript(~megaquest/math/random~[;] [60[;] 120])]);} else bonus(1000);,Random Roll,REQUIRE6|REQUIRE6,,PURPLE,,,,none,0,YES,NO,,,,,,,,,,delay(1.0);,,,
Monologue,25% chance to dodge|[gray](Reuseable),1,var odds = 25; if (getstatusself(~luck~) > 0) odds += 25 * getstatusself(~luck~); if (getstatusself(~luck+~) > 0) odds = 100; if (chance(odds)) {inflictself(DODGE); sfx(~_dodge~);} else {self.textparticle(~No effect!~); sfx(~roboterror~);},Quick Thinking,COUNTDOWN,5,ORANGE,threequartercountdown,removereusable,,none,-1,YES,NO,,,,,,,,,,,,,
Cleaver Throw,Do [sword]<d6> damage...,1,attack(d); sfxdamage(target[;] d); giveequipment(~Cleaver Catch!~[;] false); if (!simulation) {inflictself(~mqendturnselfdamage~[;] 6); for (eq in self.equipment) if (eq.name == ~Cleaver Catch!~) runscript(~megaquest/repeatcall~[;] [function (args[;] actuator) {if (self.getvar(~mqmyturn~) != 1) {actuator._repeat = 0;} else {args[0].equipmentcol = args[1] ? 2 : 0; args[2](~megaquest/shake~[;] [args[0][;] 0.1[;] 1[;] 1]); args[1] = !args[1];}}[;] 0.5[;] -1[;] eq[;] true[;] runscript]); } else attackself(6); sfx(~_whoosh~[;] ~~[;] 0.5);,Plasma Gun,EVEN,,RED,add1,complicate,,_metals,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Cleaver Catch!,Take [sword]6 damage|if unused,1,if (!simulation) removestatusself(~mqendturnselfdamage~[;] 6); else attackself(-6); screenshake();,Broken Gadget,REQUIRE6,,RED,,,,_shield,0,YES,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Siren Pole,Do [sword]<d6> damage|Even: [weaken]1 weaken|Odd: [thorns]1 thorns,2,attack(d); sfxdamage(target[;] d); if ((d % 2) == 0) {inflict(WEAKEN); sfx(~_weaken~[;] ~~[;] 0.2);} else {inflictself(THORNS); sfx(~_thorns~[;] ~~[;] 0.2);},Stardust,MAX4,,ORANGE,increaserange,decreaserange,,_whooshweapons,0,NO,NO,,,,,,,,,,,,,if ((d % 2) == 1) {inflictself(THORNS); sfx(~_thorns~);}
Suspicious Trashcan,Repeat next attack|Weaken all your items|Must be used first,1,inflictself(FURY); if (!simulation) {for (eq in self.equipment) if (eq.isready() && eq.skillcard == ~~ && !eq.hastag(~skillcard~)) eq.animate(WEAKEN); } else inflictself(WEAKEN[;] ALL);,Fury,COUNTDOWN,7,RED,halfcountdown,change_power,,_fury,0,YES,NO,,e.preventdefault = true; e.maintainfury = true;,,,,,if (e.isready() && e.availablethisturn) {e.availablethisturn = false; e.unavailabledetails = [~Must be used first~]; e.animate(~flashandshake~);},,,,,,
Suspicious Trashcan_downgraded,Do [sword]3 damage|Weaken all your items|Must be used first,1,attack(3); sfxdamage(target[;] 3); if (!simulation) {for (eq in self.equipment) if (eq.isready() && eq.skillcard == ~~ && !eq.hastag(~skillcard~)) eq.animate(WEAKEN); } else inflictself(WEAKEN[;] ALL);,Fury,COUNTDOWN,7,RED,,,,_fury,0,YES,NO,,e.preventdefault = true; e.maintainfury = true;,,,,,if (e.isready() && e.availablethisturn) {e.availablethisturn = false; e.unavailabledetails = [~Must be used first~]; e.animate(~flashandshake~);},,,,,,
Crayon Cannon,Remove all your statuses[;]|inflict [poison]<d6> for each,1,var amount = 0; if (!simulation) {if (self.status.length > 0) for (st in self.status.copy()) if (!st.invisible) {amount++; removestatusself(st.type[;] ALL);}} else amount = getstatusself(ALL); if (amount > 0) {inflict(POISON[;] amount); sfx(~_poison~);} else {target.textparticle(~No effect!~);},Poison Arrow,MAX2,,PURPLE,increaserange,decreaserange,,none,0,NO,NO,,,,,,,,,,,,,
Water Wheel,+3 to Limit Break|[gray](Reuseable),1,if (!simulation) {self.limitvalue += 3; if (self.limitvalue > self.limitmax) self.limitvalue = self.limitmax;} else bonus(-1000);,Power Up,ODD,,YELLOW,simplify,complicate,,_cure,-1,YES,NO,,1,,,,,,,,,,,
Electrocutor,Do [shock]2 damage|(At start of turn: Add [ice]2[])|[gray](Reuseable),1,attack(2[;] SHOCK); sfxdamage(target[;] 2);,Static Shock,EVEN,,BRIGHTCYAN,change_power,removereusable,,_shock,2,NO,NO,,,,,,inflict(ICE[;] 2); sfx(~_ice~); e.animate(~flashandshake~);,,,,,,,
Electrocutor_upgraded,Do [shock]2 damage|(At start of turn: Add [ice]2[])|[gray](Reuseable),1,attack(2[;] SHOCK); sfxdamage(target[;] 2);,Static Shock,EVEN,,BRIGHTCYAN,,,,_shock,4,NO,NO,,,,,,inflict(ICE[;] 2); sfx(~_ice~); e.animate(~flashandshake~);,,,,,,,
Confident Entrance,At the start of the first|turn[;] gain [shield]6 shield,1,,Protection,,,ORANGE,change_power,change_power,,none,0,NO,NO,,,,,,if (turn == 1) {inflictself(SHIELD[;] 6); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~);},,,,,,,
Confident Entrance_upgraded,At the start of the first|turn[;] gain [shield]8 shield,1,,Protection,,,ORANGE,,,,none,0,NO,NO,,,,,,if (turn == 1) {inflictself(SHIELD[;] 8); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~);},,,,,,,
Confident Entrance_downgraded,At the start of the first|turn[;] gain [shield]2 shield,1,,Protection,,,ORANGE,,,,none,0,NO,NO,,,,,,if (turn == 1) {inflictself(SHIELD[;] 2); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~);},,,,,,,
Almost There,If enemy has less than 50%|HP[;] roll an extra dice,1,,Magic Dice,,,GREEN,change_power,change_power,,none,0,NO,NO,,,,,if (target.hp / target.maxhp > 0.5) e.changecolour(~GRAY~);,if (target.hp / target.maxhp < 0.5) {givedice(); e.changecolour(~GREEN~); e.animate(~flashandshake~);},,,,,,,
Almost There_upgraded,If enemy has less than 60%|HP[;] roll an extra dice,1,,Magic Dice,,,GREEN,,,,none,0,NO,NO,,,,,if (target.hp / target.maxhp > 0.6) e.changecolour(~GRAY~);,if (target.hp / target.maxhp < 0.6) {givedice(); e.changecolour(~GREEN~); e.animate(~flashandshake~);},,,,,,,
Almost There_downgraded,If enemy has less than 25%|HP[;] roll an extra dice,1,,Magic Dice,,,GREEN,,,,none,0,NO,NO,,,,,if (target.hp / target.maxhp > 0.25) e.changecolour(~GRAY~);,if (target.hp / target.maxhp < 0.25) {givedice(); e.changecolour(~GREEN~); e.animate(~flashandshake~);},,,,,,,
Day Night Cycle@day,Change day to night|+1 dice this fight,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} if (!simulation) self.extradice++; else bonus(1000); var weather = [~Thunder Storm~[;] ~Hurricane~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@night~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,BRIGHTCYAN,change_power,change_power,,_vanish,0,YES,YES,,,,,,,,,,,,,
Day Night Cycle@day_upgraded,Change day to night|+1 dice this fight|Recover [heal]3 health,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} if (!simulation) self.extradice++; else bonus(1000); attackself(-3); sfx(~_heal~[;] ~~[;] 0.2); var weather = [~Thunder Storm~[;] ~Hurricane~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@night~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,BRIGHTCYAN,,,,_vanish,0,YES,YES,,,,,,,,,,,,,
Day Night Cycle@day_downgraded,Change day to night,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} var weather = [~Thunder Storm~[;] ~Hurricane~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@night~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,BRIGHTCYAN,,,,_vanish,0,YES,YES,,,,,,,,,,,,,
Day Night Cycle@night,Change night to day|+1 dice this fight,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} if (!simulation) self.extradice++; else bonus(1000); var weather = [~Heatwave~[;] ~Sunstrike~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@day~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,PURPLE,change_power,change_power,,useitem,0,YES,YES,,,,,,,,,,,,,
Day Night Cycle@night_upgraded,Change night to day|+1 dice this fight|Recover [heal]3 health,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} if (!simulation) self.extradice++; else bonus(1000); attackself(-3); sfx(~_heal~[;] ~~[;] 0.2); var weather = [~Heatwave~[;] ~Sunstrike~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@day~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,PURPLE,,,,useitem,0,YES,YES,,,,,,,,,,,,,
Day Night Cycle@night_downgraded,Change night to day,2,if (!simulation) {if (self.equipment.length > 0) for (eq in self.equipment) if (eq.name != ~Mood Change~) {eq.usedthisbattle = true; eq.ready = false; eq.animate(~error~);}} var weather = [~Heatwave~[;] ~Sunstrike~]; giveequipment([rand(weather)[;] rand(weather)[;] rand(weather)[;] ~Day Night Cycle@day~][;] true[;] false); screenshake();,Regenerate,COUNTDOWN,5,PURPLE,,,,useitem,0,YES,YES,,,,,,,,,,,,,
Sunstrike,Do [weaken]3[;] inflict [weaken]1 weaken|[gray](once per battle),2,attack(3[;] WEAKEN); sfxdamage(target[;] 3); inflict(WEAKEN);,Mumble,COUNTDOWN,5,ORANGE,change_power,change_power,,_weaken,0,NO,YES,,,,,,,,,,,,,
Sunstrike_upgraded,Do [weaken]4[;] inflict [weaken]1 weaken|[gray](once per battle),2,attack(4[;] WEAKEN); sfxdamage(target[;] 4); inflict(WEAKEN);,Mumble,COUNTDOWN,5,ORANGE,,,,_weaken,0,NO,YES,,,,,,,,,,,,,
Sunstrike_downgraded,Inflict [weaken]1 weaken|[gray](once per battle),2,inflict(WEAKEN);,Mumble,COUNTDOWN,5,ORANGE,,,,_weaken,0,NO,YES,,,,,,,,,,,,,
Call from Beyond,Inflict [mqinsanity]Insanity|Blind [blind]4 dice,2,inflict(~mqinsanity~); inflict(BLIND[;] 4);,Stardust,DOUBLES|DOUBLES,,PURPLE,change_power,change_power,,_mqinsanity,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Call from Beyond_upgraded,Inflict [mqinsanity]Insanity|Blind [blind]4 dice,2,inflict(~mqinsanity~); inflict(BLIND[;] 4);,Stardust,COUNTDOWN,10,PURPLE,,,,_mqinsanity,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Call from Beyond_downgraded,Inflict [mqinsanity]Insanity|Blind [blind]4 dice,2,inflict(~mqinsanity~); inflict(BLIND[;] 4);,Stardust,REQUIRE6|REQUIRE6,,PURPLE,,,,_mqinsanity,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Shipwrecker,Do [sword]<d6>[;] inflict [weaken]1 weaken|[gray](Reuseable),2,attack(d); sfxdamage(target[;] d); inflict(WEAKEN);,Plasma Gun,EVEN,,ORANGE,change_power,complicate,,_weaken,2,NO,NO,,,,,,,,,,,,,
Shipwrecker_upgraded,Do [sword]<d6>[;] inflict [weaken]1 weaken|[gray](Reuseable),2,attack(d); sfxdamage(target[;] d); inflict(WEAKEN);,Plasma Gun,EVEN,,ORANGE,,,,_weaken,3,NO,NO,,,,,,,,,,,,,
Reverb,Do [sword]2[;] inflict [weaken]1 weaken[;]|snap random equipment,1,attack(2); sfxdamage(target[;] 2); inflict(WEAKEN); if (!simulation) {var equipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.isready()) equipment.push(eq); if (equipment.length > 0) runscript(~megaquest/snap~[;] [rand(equipment)[;] self[;] target[;] true]);} else bonus(1000);,Trap Card,COUNTDOWN,5,ORANGE,change_power,change_power,,_weaken,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Reverb_upgraded,Do [sword]3[;] inflict [weaken]1 weaken[;]|snap random equipment,1,attack(3); sfxdamage(target[;] 3); inflict(WEAKEN); if (!simulation) {var equipment = []; if (self.equipment.length > 0) for (eq in self.equipment) if (eq.skillcard == ~~ && !eq.hastag(~skillcard~) && eq.isready()) equipment.push(eq); if (equipment.length > 0) runscript(~megaquest/snap~[;] [rand(equipment)[;] self[;] target[;] true]);} else bonus(1000);,Trap Card,COUNTDOWN,5,ORANGE,,,,_weaken,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Reverb_downgraded,Do [sword]2[;] inflict [weaken]1 weaken,1,attack(2); sfxdamage(target[;] 2); inflict(WEAKEN);,Trap Card,COUNTDOWN,5,ORANGE,,,,_weaken,0,NO,NO,,,,,,,,,,delay(1.0);,,,
Sound Barrier,Silence Enemy,1,inflict(SILENCE);,Tape,DOUBLES|DOUBLES,,PURPLE,simplify,complicate,,_silence,0,NO,NO,excludefromrandomlists|cannotsteal,,,,,,,,,,,,
Ultrasound,Shock [shock]2 equipment,1,inflict(SHOCK[;] 2);,Zap,DOUBLES|DOUBLES,,YELLOW,change_power,change_power,,_shock,0,NO,NO,,,,,,,,,,,,,
Ultrasound_upgraded,Shock [shock]3 equipment,1,inflict(SHOCK[;] 3);,Zap,DOUBLES|DOUBLES,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Ultrasound_downgraded,Shock [shock]1 equipment,1,inflict(SHOCK);,Zap,DOUBLES|DOUBLES,,YELLOW,,,,_shock,0,NO,NO,,,,,,,,,,,,,
Vibrato,Inflict [vanish]Vanish,1,inflict(VANISH);,Lockdown,DOUBLES|DOUBLES,,PINK,simplify,complicate,,_vanish,0,NO,NO,,,,,,,,,,,,,
Phaser,Dodge next attack,1,inflictself(DODGE);,Quick Thinking,DOUBLES|DOUBLES,,YELLOW,simplify,complicate,,_dodge,0,YES,NO,,,,,,,,,,,,,
Lights Out,Lock [lock]2 dice|Roll 2 new dice,2,inflict(LOCK[;] 2); if (simulation) inflictself(~mqbackstab~); givedice([rand([1[;] 2[;] 3[;] 4[;] 5[;] 6])[;] rand([1[;] 2[;] 3[;] 4[;] 5[;] 6])]);,Lockdown,REQUIRE1|REQUIRE1,,PINK,increaserange,doublerequirements,,_lock,0,NO,NO,,,,,,,,,,,,,
Backstab@mq,Do [sword]<equipmentuse> damage. Add [sword]1|on each item use.,1,var dmg = !simulation ? self.equipmentused - 1 : getstatusself(~mqbackstab~); attack(dmg); sfxdamage(target[;] dmg);,Time Stop,REQUIRE3,,GRAY,simplify,doublerequirements,,_metals,0,NO,NO,excludefromrandomlists,,,,,,inflictself(~mqbackstab~);,,,,,,
Cloak@mq,Gain [reduce]1 reduce|[gray](Reuseable),1,inflictself(REDUCE| 1); if (simulation) inflictself(~mqbackstab~);,Protection,COUNTDOWN,4,ORANGE,change_power,change_power,,_shield,3,YES,NO,,1,,,,,,,,,,,
Cloak@mq_upgraded,Gain [reduce]1 reduce|[gray](Reuseable),1,inflictself(REDUCE| 1); if (simulation) inflictself(~mqbackstab~);,Protection,COUNTDOWN,4,ORANGE,,,,_shield,-1,YES,NO,,,,,,,,,,,,,
Cloak@mq_downgraded,Gain [reduce]1 reduce,1,inflictself(REDUCE| 1); if (simulation) inflictself(~mqbackstab~);,Protection,COUNTDOWN,4,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Forbidden Magic,Numb enemy,2,inflict(~mqnumb~);,Stardust,COUNTDOWN,20,GRAY,threequartercountdown,change_power,,_blind,0,NO,NO,excludefromrandomlists|cannotsteal|mqchantblink,,,,,,,,,,,,
Forbidden Magic_downgraded,Confuse enemy,2,inflict(CONFUSE);,Stardust,COUNTDOWN,20,GRAY,,,,_confuse,0,NO,NO,excludefromrandomlists|cannotstealmqchantblink,,,,,,,,,,,,
Chant,Do [sword]<d6>[;] inflict random[;]|-<d6> to countdowns,1,attack(d); sfxdamage(target[;] d); var st = rand([FIRE[;] ICE[;] SHOCK[;] WEAKEN[;] LOCK[;] POISON]); inflict(st); sfx(~_~ + st.toLowerCase()[;] ~~[;] 0.2); boostcountdowns(d); if (!simulation) {for (eq in self.equipment) if (eq.hastag(~mqchantblink~)) {runscript(~megaquest/delaycall~[;] [function (args) {args[0].equipmentcol = args[1];}[;] 0.1[;] eq[;] eq.equipmentcol]); eq.equipmentcol = 2; runscript(~megaquest/shake~[;] [eq[;] 0.1[;] 4]);}},Accelerate,MAX4,,PURPLE,increaserange,decreaserange,,none,0,NO,NO,,,,,,,,,,,,,
Cardboard Castle,Add [shield]7 shield,2,inflictself(SHIELD[;] 7);,Protection,REQUIRE3|REQUIRE3,,ORANGE,change_power,change_power,,_shield,0,YES,NO,,,,,,,,,,,,,
Cardboard Castle_upgraded,Add [shield]8 shield,2,inflictself(SHIELD[;] 8);,Protection,REQUIRE3|REQUIRE3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Cardboard Castle_downgraded,Add [shield]3 shield,2,inflictself(SHIELD[;] 3);,Protection,REQUIRE3|REQUIRE3,,ORANGE,,,,_shield,0,YES,NO,,,,,,,,,,,,,
Pay the Price,Do [sword]3 damage per [gold]|on the enemy ([sword]<var:mqpaytheprice>),2,var dmg = 3 * (simulation ? getstatusself(~mqpaytheprice~) : target.gold); attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,ODD,,YELLOW,change_power,change_power,,none,0,NO,NO,excludefromrandomlists|cannotsteal|showgold,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 0); self.setvar(~mqpaytheprice+~[;] 0); self.setvar(~mqpaytheprice-~[;] 0);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold); removestatusself(~mqpaytheprice~[;] ALL); inflictself(~mqpaytheprice~[;] target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,,,
Pay the Price_upgraded,Do [sword]4 damage per [gold]|on the enemy ([sword]<var:mqpaytheprice+>),2,var dmg = 4 * (simulation ? getstatusself(~mqpaytheprice~) : target.gold); attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,ODD,,YELLOW,,,,none,0,NO,NO,excludefromrandomlists|cannotsteal|showgold,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 0); self.setvar(~mqpaytheprice+~[;] 0); self.setvar(~mqpaytheprice-~[;] 0);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold); removestatusself(~mqpaytheprice~[;] ALL); inflictself(~mqpaytheprice~[;] target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,,,
Pay the Price_downgraded,Do [sword]2 damage per [gold]|on the enemy ([sword]<var:mqpaytheprice->),2,var dmg = 2 * (simulation ? getstatusself(~mqpaytheprice~) : target.gold); attack(dmg); sfxdamage(target[;] dmg);,Plasma Gun,ODD,,YELLOW,,,,none,0,NO,NO,excludefromrandomlists|cannotsteal|showgold,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 0); self.setvar(~mqpaytheprice+~[;] 0); self.setvar(~mqpaytheprice-~[;] 0);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold); removestatusself(~mqpaytheprice~[;] ALL); inflictself(~mqpaytheprice~[;] target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,self.setvar(~mqpaytheprice~[;] 3 * target.gold); self.setvar(~mqpaytheprice+~[;] 4 * target.gold); self.setvar(~mqpaytheprice-~[;] 2 * target.gold);,,,,
